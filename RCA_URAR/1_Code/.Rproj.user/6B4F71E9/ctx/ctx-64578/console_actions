{
    "type": [
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        3,
        2,
        0,
        1,
        2,
        3,
        3,
        3,
        2,
        2,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        0,
        1,
        0,
        1,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        0,
        1,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        0,
        1,
        3,
        3,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        0,
        1,
        0,
        1,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2
    ],
    "data": [
        "> ",
        "#source(\"R/resamples.R\")",
        "> ",
        "#source(\"R/earth.fit.R\")",
        "> ",
        "#source(\"R/earth.R\")",
        "> ",
        "",
        "> ",
        "#source(\"R/modelInfoGbm.R\")",
        "> ",
        "gctorture(FALSE)",
        "> ",
        "#set.seed(9843217)",
        "> ",
        "#set.seed(98714217)",
        "> ",
        "#set.seed(247943217)    ",
        "> ",
        "set.seed(249334217)",
        "> ",
        "#et.seed(32134217)",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "# function(projEnv,",
        "> ",
        "#          codeFolder,",
        "> ",
        "#          projectParentFolder,",
        "> ",
        "#          projectID,",
        "> ",
        "#          mlsData,",
        "> ",
        "#          mlsSheet,",
        "> ",
        "#          targetVariable,",
        "> ",
        "#          bootstrap,",
        "> ",
        "#          pmethod,",
        "> ",
        "#          maxterms,",
        "> ",
        "#          nprune,",
        "> ",
        "#          minspan,",
        "> ",
        "#          endspan,",
        "> ",
        "#          degree,",
        "> ",
        "#          subjectCQA) ",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "SetUp_0(projEnv,",
        "+ ",
        "        \"C:/Order_1/RPackages/Mkt01/\",",
        "+ ",
        "        \"C:/Order_1/Market/\",",
        "+ ",
        "        \"M01\",",
        "+ ",
        "        \"Appraisal_2\",",
        "+ ",
        "        \"MLSData\",",
        "+ ",
        "        ",
        "+ ",
        "        \"SalePrice\",",
        "+ ",
        "        40,",
        "+ ",
        "        \"backward\",",
        "+ ",
        "        100,",
        "+ ",
        "        4:14,",
        "+ ",
        "        3,",
        "+ ",
        "        3,",
        "+ ",
        "        1,",
        "+ ",
        "        5.0)",
        "[1] \"SetUpProjectEnvironment\"\n[1] \"ProjectParentFolder:  C:/Order_1/Market/\"\n[1] \"MlsVersionFolder:  C:/Order_1/Market/M01/Earth/Mls/CQA5D1_20220831_234418/\"\n[1] \"created\"\n[1] \"DBFile:  C:/Order_1/Market/M01/Earth/DB/M01DB.sqlite\"\n[1] \"K1\"\n[1] \"K2\"\n[1] \"K3\"\n[1] \"K4\"\n[1] \"LoadMlsExcelToDataFrame\"\n[1] \"MLSData File:  C:/Order_1/Market/M01/Earth/Mls/Appraisal_2.xlsx   MLSData\"\n[1] \"LoadMappingsExcelToDataFrame\"\n[1] \"Load Project\"\n[1] \"#1 projEnv$EffDate:  2022-08-22  projEnv$ProjectDF$EffDate:  \"\n[1] \"Load OneWayAggregation\"",
        "\n[1] \"Load InteractionAggregation\"\n[1] \"Load URARMapping\"\n[1] \"Load AllowedInteractions\"\n[1] \"Load MlsMapping\"\n[1] \"Load HelpFields\"\n[1] \"Load FieldsRecalculated\"\n[1] \"Load FieldsCalcStage1DF\"\n[1] \"Load FieldsCalcStage2DF\"\n[1] \"Load RegressionFields\"\n[1] \"MlsMappingDF.OriginalMLSFieldName [ 22 ] is missing in MlsDataDF  StreetAddress (Full)\"\n[1] \"MlsMappingDF.OriginalMLSFieldName [ 26 ] is missing in MlsDataDF  DaysOffMkt\"\n[1] \"Processing aborted due to errors.\"\n[1] \"Run aborted\"\n[1] \"T1 xxxxxxxxxxxxxxxxxxxxxxxx\"",
        "\n[1] \"Compress MlsDataDF\"\n[1] \"nc:  75\"\n[1] \"Compress ProjectDF\"\n[1] \"nc:  2\"\n[1] \"Compress OneWayAggregationDF\"\n[1] \"nc:  2\"\n[1] \"Compress InteractionAggregationDF\"\n[1] \"nc:  15\"\n[1] \"Compress AllowedInteractionsDF\"\n[1] \"nc:  15\"\n[1] \"Compress MlsMappingDF\"\n[1] \"nc:  4\"\n[1] \"Compress ProjectDF\"\n[1] \"nc:  2\"\n[1] \"Compress FieldsRecalculated\"\n[1] \"nc:  0\"\n[1] \"Compress FieldsCalcStage1\"\n[1] \"nc:  0\"\n[1] \"Compress FieldsCalcStage2\"\n[1] \"nc:  0\"\n[1] \"Compress HelpFields\"\n[1] \"nc:  0\"\n[1] \"Compress RegressionFields\"",
        "\n[1] \"nc:  0\"\n[1] \"Finished compression\"\n<environment: 0x00000210b407a420>\n[1] \"Finished compressionA\"\n[1] \"T2\"\n[1] \"ConvertDatesToChar MlsDataDF\"\n[1] \"ConvertDatesToChar\"\n[1] \"i/t[i]:  8 Date\"\n  [1] \"08/09/2022\" \"08/05/2022\" \"07/25/2022\" \"07/23/2022\" \"07/22/2022\" \"07/21/2022\" \"07/19/2022\" \"07/19/2022\" \"07/15/2022\" \"07/15/2022\" \"07/15/2022\" \"07/15/2022\" \"07/14/2022\" \"07/14/2022\"\n [15] \"07/11/2022\" \"07/11/2022\" \"07/11/2022\" \"07/08/2022\" \"07/06/2022\" \"07/06/2022\" \"07/04/2022\" \"07/01/2022\" \"07/01/2022\" \"06/30/2022\"",
        " \"06/30/2022\" \"06/28/2022\" \"06/27/2022\" \"06/22/2022\"\n [29] \"06/17/2022\" \"06/14/2022\" \"06/06/2022\" \"06/03/2022\" \"06/03/2022\" \"06/02/2022\" \"05/31/2022\" \"05/29/2022\" \"05/27/2022\" \"05/26/2022\" \"05/25/2022\" \"05/25/2022\" \"05/24/2022\" \"05/23/2022\"\n [43] \"05/21/2022\" \"05/19/2022\" \"05/18/2022\" \"05/16/2022\" \"05/15/2022\" \"05/13/2022\" \"05/12/2022\" \"05/12/2022\" \"05/11/2022\" \"05/10/2022\" \"05/09/2022\" \"05/07/2022\" \"05/07/2022\" \"05/07/2022\"\n [57] \"05/04/2022\" \"05/04/2022\" \"05/03/2022\" \"04/29/2022\" \"04/28/2022\" \"04/26/2022\"",
        " \"04/26/2022\" \"04/25/2022\" \"04/25/2022\" \"04/22/2022\" \"04/21/2022\" \"04/19/2022\" \"04/18/2022\" \"04/15/2022\"\n [71] \"04/15/2022\" \"04/14/2022\" \"04/13/2022\" \"04/12/2022\" \"04/11/2022\" \"04/10/2022\" \"04/07/2022\" \"04/07/2022\" \"04/05/2022\" \"04/04/2022\" \"03/31/2022\" \"03/31/2022\" \"03/31/2022\" \"03/30/2022\"\n [85] \"03/29/2022\" \"03/24/2022\" \"03/22/2022\" \"03/22/2022\" \"03/21/2022\" \"03/21/2022\" \"03/20/2022\" \"03/18/2022\" \"03/17/2022\" \"03/16/2022\" \"03/16/2022\" \"03/16/2022\" \"03/16/2022\" \"03/15/2022\"\n [99] \"03/11/2022\" \"03/11/2022\"",
        " \"03/10/2022\" \"03/10/2022\" \"03/09/2022\" \"03/09/2022\" \"03/05/2022\" \"03/04/2022\" \"03/03/2022\" \"03/02/2022\" \"03/02/2022\" \"03/01/2022\" \"03/01/2022\" \"03/01/2022\"\n[113] \"02/28/2022\" \"02/28/2022\" \"02/26/2022\" \"02/25/2022\" \"02/24/2022\" \"02/23/2022\" \"02/22/2022\" \"02/22/2022\" \"02/22/2022\" \"02/18/2022\" \"02/17/2022\" \"02/16/2022\" \"02/16/2022\" \"02/15/2022\"\n[127] \"02/12/2022\" \"02/11/2022\" \"02/11/2022\" \"02/11/2022\" \"02/10/2022\" \"02/09/2022\" \"02/09/2022\" \"02/08/2022\" \"02/07/2022\" \"02/05/2022\" \"02/02/2022\" \"02/02/2022\" \"02/01/2022\"",
        " \"01/29/2022\"\n[141] \"01/28/2022\" \"01/27/2022\" \"01/27/2022\" \"01/26/2022\" \"01/25/2022\" \"01/21/2022\" \"01/20/2022\" \"01/19/2022\" \"01/19/2022\" \"01/19/2022\" \"01/18/2022\" \"01/17/2022\" \"01/13/2022\" \"01/13/2022\"\n[155] \"01/12/2022\" \"01/11/2022\" \"01/06/2022\" \"12/31/2021\" \"12/29/2021\" \"12/28/2021\" \"12/22/2021\" \"12/21/2021\" \"12/17/2021\" \"12/16/2021\" \"12/15/2021\" \"12/15/2021\" \"12/10/2021\" \"12/09/2021\"\n[169] \"12/08/2021\" \"12/07/2021\" \"12/07/2021\" \"12/06/2021\" \"12/03/2021\" \"12/03/2021\" \"12/03/2021\" \"12/02/2021\" \"12/01/2021\"",
        " \"11/29/2021\" \"11/29/2021\" \"11/26/2021\" \"11/23/2021\" \"11/23/2021\"\n[183] \"11/20/2021\" \"11/20/2021\" \"11/18/2021\" \"11/18/2021\" \"11/18/2021\" \"11/17/2021\" \"11/17/2021\" \"11/17/2021\" \"11/17/2021\" \"11/17/2021\" \"11/16/2021\" \"11/13/2021\" \"11/11/2021\" \"11/11/2021\"\n[197] \"11/10/2021\" \"11/10/2021\" \"11/09/2021\" \"11/08/2021\" \"11/07/2021\" \"11/05/2021\" \"11/05/2021\" \"11/05/2021\" \"11/03/2021\" \"11/03/2021\" \"11/03/2021\" \"11/03/2021\" \"11/01/2021\" \"11/01/2021\"\n[211] \"10/27/2021\" \"10/26/2021\" \"10/25/2021\" \"10/23/2021\" \"10/21/2021\"",
        " \"10/20/2021\" \"10/18/2021\" \"10/15/2021\" \"10/13/2021\" \"10/13/2021\" \"10/13/2021\" \"10/13/2021\" \"10/12/2021\" \"10/12/2021\"\n[225] \"10/12/2021\" \"10/07/2021\" \"10/06/2021\" \"10/06/2021\" \"10/02/2021\" \"10/02/2021\" \"10/01/2021\" \"09/29/2021\" \"09/29/2021\" \"09/29/2021\" \"09/28/2021\" \"09/27/2021\" \"09/27/2021\" \"09/25/2021\"\n[239] \"09/24/2021\" \"09/24/2021\" \"09/23/2021\" \"09/22/2021\" \"09/17/2021\" \"09/15/2021\" \"09/15/2021\" \"09/13/2021\" \"09/10/2021\" \"09/09/2021\" \"09/09/2021\" \"09/03/2021\" \"09/02/2021\" \"09/01/2021\"\n[253] \"08/31/2021\"",
        " \"08/25/2021\" \"08/24/2021\" \"08/22/2021\" \"08/20/2021\" \"08/20/2021\" \"08/19/2021\"\n[1] \"i/t[i]:  9 Date\"\n  [1] \"08/17/2022\" \"08/05/2022\" \"08/17/2022\" \"08/22/2022\" \"08/16/2022\" \"07/28/2022\" \"08/19/2022\" \"08/12/2022\" \"08/05/2022\" \"07/22/2022\" \"08/04/2022\" \"08/05/2022\" \"08/03/2022\" \"08/09/2022\"\n [15] \"07/27/2022\" \"08/10/2022\" \"08/04/2022\" \"08/04/2022\" \"08/11/2022\" \"08/12/2022\" \"07/28/2022\" \"07/26/2022\" \"07/01/2022\" \"07/29/2022\" \"07/27/2022\" \"07/21/2022\" \"07/29/2022\" \"07/08/2022\"\n [29] \"07/22/2022\" \"07/21/2022\" \"07/05/2022\"",
        " \"06/27/2022\" \"06/15/2022\" \"06/29/2022\" \"06/27/2022\" \"07/01/2022\" \"06/27/2022\" \"06/27/2022\" \"06/15/2022\" \"06/13/2022\" \"06/17/2022\" \"06/21/2022\"\n [43] \"06/15/2022\" \"06/22/2022\" \"06/07/2022\" \"06/14/2022\" \"06/28/2022\" \"06/01/2022\" \"05/20/2022\" \"05/31/2022\" \"05/31/2022\" \"06/10/2022\" \"06/03/2022\" \"06/03/2022\" \"06/07/2022\" \"06/01/2022\"\n [57] \"05/25/2022\" \"05/25/2022\" \"05/25/2022\" \"05/24/2022\" \"05/25/2022\" \"06/02/2022\" \"06/06/2022\" \"05/24/2022\" \"05/31/2022\" \"05/18/2022\" \"05/23/2022\" \"05/17/2022\" \"05/20/2022\" \"05/09/2022\"",
        "\n [71] \"05/20/2022\" \"05/05/2022\" \"05/12/2022\" \"04/29/2022\" \"05/06/2022\" \"05/03/2022\" \"05/10/2022\" \"05/16/2022\" \"04/23/2022\" \"04/29/2022\" \"04/22/2022\" \"04/28/2022\" \"04/21/2022\" \"05/03/2022\"\n [85] \"04/22/2022\" \"04/06/2022\" \"04/19/2022\" \"03/22/2022\" \"04/11/2022\" \"04/12/2022\" \"05/09/2022\" \"04/18/2022\" \"03/31/2022\" \"05/31/2022\" \"04/07/2022\" \"03/23/2022\" \"04/13/2022\" \"04/05/2022\"\n [99] \"04/08/2022\" \"04/11/2022\" \"05/11/2022\" \"04/06/2022\" \"03/29/2022\" \"04/04/2022\" \"04/04/2022\" \"03/22/2022\" \"04/04/2022\" \"04/05/2022\"",
        " \"03/23/2022\" \"03/18/2022\" \"03/14/2022\" \"03/24/2022\"\n[113] \"03/29/2022\" \"03/18/2022\" \"03/25/2022\" \"03/28/2022\" \"03/16/2022\" \"03/22/2022\" \"03/22/2022\" \"03/22/2022\" \"03/21/2022\" \"02/28/2022\" \"03/24/2022\" \"03/17/2022\" \"03/18/2022\" \"03/17/2022\"\n[127] \"02/12/2022\" \"03/09/2022\" \"03/08/2022\" \"03/28/2022\" \"03/09/2022\" \"03/08/2022\" \"03/01/2022\" \"03/02/2022\" \"03/11/2022\" \"03/02/2022\" \"03/03/2022\" \"02/28/2022\" \"03/11/2022\" \"02/10/2022\"\n[141] \"02/25/2022\" \"03/04/2022\" \"03/01/2022\" \"02/28/2022\" \"02/22/2022\" \"02/15/2022\"",
        " \"01/20/2022\" \"02/08/2022\" \"02/24/2022\" \"02/04/2022\" \"02/14/2022\" \"02/16/2022\" \"02/11/2022\" \"02/16/2022\"\n[155] \"02/15/2022\" \"02/01/2022\" \"01/27/2022\" \"01/27/2022\" \"01/05/2022\" \"02/07/2022\" \"01/20/2022\" \"04/15/2022\" \"01/14/2022\" \"01/14/2022\" \"02/18/2022\" \"01/18/2022\" \"01/12/2022\" \"01/10/2022\"\n[169] \"01/14/2022\" \"01/19/2022\" \"12/23/2021\" \"12/17/2021\" \"01/03/2022\" \"12/30/2021\" \"01/14/2022\" \"12/21/2021\" \"01/05/2022\" \"01/06/2022\" \"12/23/2021\" \"12/31/2021\" \"12/10/2021\" \"12/17/2021\"\n[183] \"12/15/2021\" \"12/21/2021\"",
        " \"12/10/2021\" \"12/10/2021\" \"12/30/2021\" \"12/21/2021\" \"12/08/2021\" \"12/23/2021\" \"12/09/2021\" \"12/29/2021\" \"12/17/2021\" \"12/15/2021\" \"11/30/2021\" \"11/30/2021\"\n[197] \"12/06/2021\" \"12/10/2021\" \"12/08/2021\" \"12/07/2021\" \"12/09/2021\" \"12/03/2021\" \"11/24/2021\" \"12/15/2021\" \"12/06/2021\" \"11/03/2021\" \"12/03/2021\" \"11/30/2021\" \"12/08/2021\" \"11/30/2021\"\n[211] \"11/05/2021\" \"11/05/2021\" \"11/01/2021\" \"11/24/2021\" \"10/28/2021\" \"11/19/2021\" \"11/10/2021\" \"11/11/2021\" \"11/06/2021\" \"11/03/2021\" \"10/25/2021\" \"11/08/2021\" \"11/12/2021\"",
        " \"10/22/2021\"\n[225] \"10/25/2021\" \"10/08/2021\" \"11/18/2021\" \"10/28/2021\" \"11/16/2021\" \"11/15/2021\" \"10/22/2021\" \"10/08/2021\" \"11/04/2021\" \"10/22/2021\" \"10/25/2021\" \"12/07/2021\" \"11/22/2021\" \"10/18/2021\"\n[239] \"10/26/2021\" \"10/21/2021\" \"10/25/2021\" \"10/15/2021\" \"10/21/2021\" \"10/19/2021\" \"10/15/2021\" \"09/24/2021\" \"10/01/2021\" \"10/07/2021\" \"10/13/2021\" \"09/28/2021\" \"09/14/2021\" \"11/30/2021\"\n[253] \"10/01/2021\" \"09/08/2021\" \"09/07/2021\" \"09/27/2021\" \"09/01/2021\" \"09/30/2021\" \"09/20/2021\"\n[1] \"i/t[i]:  30 Date\"\n  [1]",
        " \"07/12/2022\" \"08/05/2022\" \"06/16/2022\" \"06/30/2022\" \"07/08/2022\" \"07/14/2022\" \"07/13/2022\" \"07/01/2022\" \"06/11/2022\" \"05/06/2022\" \"06/03/2022\" \"07/10/2022\" \"06/24/2022\" \"07/07/2022\"\n [15] \"06/15/2022\" \"07/05/2022\" \"06/11/2022\" \"06/02/2022\" \"06/10/2022\" \"07/06/2022\" \"05/15/2022\" \"06/13/2022\" \"04/26/2022\" \"06/23/2022\" \"06/07/2022\" \"06/24/2022\" \"06/23/2022\" \"06/14/2022\"\n [29] \"06/03/2022\" \"05/25/2022\" \"05/11/2022\" \"05/27/2022\" \"05/25/2022\" \"05/14/2022\" \"04/28/2022\" \"05/22/2022\" \"05/19/2022\" \"05/19/2022\" \"05/06/2022\"",
        " \"05/19/2022\" \"05/19/2022\" \"04/22/2022\"\n [43] \"05/13/2022\" \"05/13/2022\" \"05/11/2022\" \"04/21/2022\" \"05/12/2022\" \"05/05/2022\" \"05/05/2022\" \"05/06/2022\" \"05/06/2022\" \"04/28/2022\" \"04/28/2022\" \"04/22/2022\" \"05/05/2022\" \"04/29/2022\"\n [57] \"04/28/2022\" \"04/29/2022\" \"04/22/2022\" \"04/20/2022\" \"04/25/2022\" \"04/21/2022\" \"04/21/2022\" \"04/22/2022\" \"04/03/2022\" \"04/13/2022\" \"04/14/2022\" \"03/05/2022\" \"03/11/2022\" \"04/08/2022\"\n [71] \"04/07/2022\" \"03/31/2022\" \"02/17/2022\" \"03/31/2022\" \"03/25/2022\" \"03/31/2022\" \"03/25/2022\"",
        " \"03/30/2022\" \"03/24/2022\" \"02/26/2022\" \"03/24/2022\" \"03/25/2022\" \"03/18/2022\" \"03/17/2022\"\n [85] \"03/17/2022\" \"02/04/2022\" \"03/18/2022\" \"03/22/2022\" \"03/10/2022\" \"03/21/2022\" \"02/17/2022\" \"02/02/2022\" \"03/16/2022\" \"02/10/2022\" \"03/07/2022\" \"03/10/2022\" \"03/03/2022\" \"03/03/2022\"\n [99] \"02/26/2022\" \"03/03/2022\" \"03/10/2022\" \"03/01/2022\" \"02/28/2022\" \"03/04/2022\" \"01/20/2022\" \"02/21/2022\" \"02/22/2022\" \"02/24/2022\" \"02/22/2022\" \"02/25/2022\" \"02/28/2022\" \"02/19/2022\"\n[113] \"02/24/2022\" \"01/30/2022\" \"02/18/2022\"",
        " \"02/18/2022\" \"02/11/2022\" \"02/15/2022\" \"02/10/2022\" \"02/08/2022\" \"02/09/2022\" \"02/07/2022\" \"02/16/2022\" \"02/10/2022\" \"02/10/2022\" \"02/03/2022\"\n[127] \"02/12/2022\" \"01/27/2022\" \"02/03/2022\" \"12/31/2021\" \"01/28/2022\" \"01/27/2022\" \"01/27/2022\" \"02/03/2022\" \"01/27/2022\" \"01/28/2022\" \"01/21/2022\" \"01/20/2022\" \"01/24/2022\" \"01/27/2022\"\n[141] \"01/21/2022\" \"01/20/2022\" \"01/20/2022\" \"01/14/2022\" \"01/12/2022\" \"01/15/2022\" \"01/20/2022\" \"01/13/2022\" \"01/11/2022\" \"01/14/2022\" \"01/17/2022\" \"12/21/2021\" \"01/06/2022\" \"01/06/2022\"",
        "\n[155] \"01/06/2022\" \"01/04/2022\" \"12/30/2021\" \"12/18/2021\" \"11/19/2021\" \"09/15/2021\" \"12/03/2021\" \"12/09/2021\" \"12/10/2021\" \"12/08/2021\" \"12/03/2021\" \"12/08/2021\" \"11/29/2021\" \"11/29/2021\"\n[169] \"12/06/2021\" \"11/30/2021\" \"11/20/2021\" \"11/03/2021\" \"11/26/2021\" \"11/18/2021\" \"11/19/2021\" \"11/15/2021\" \"11/18/2021\" \"11/19/2021\" \"11/12/2021\" \"11/19/2021\" \"11/12/2021\" \"11/12/2021\"\n[183] \"11/12/2021\" \"09/08/2021\" \"11/04/2021\" \"11/04/2021\" \"10/19/2021\" \"11/04/2021\" \"11/12/2021\" \"11/05/2021\" \"11/05/2021\" \"11/09/2021\"",
        " \"11/04/2021\" \"11/02/2021\" \"08/12/2021\" \"10/29/2021\"\n[197] \"10/28/2021\" \"10/29/2021\" \"11/03/2021\" \"11/05/2021\" \"10/29/2021\" \"11/01/2021\" \"10/28/2021\" \"10/12/2021\" \"10/21/2021\" \"11/03/2021\" \"10/28/2021\" \"09/25/2021\" \"09/10/2021\" \"10/12/2021\"\n[211] \"10/14/2021\" \"08/27/2021\" \"10/12/2021\" \"08/24/2021\" \"09/28/2021\" \"10/07/2021\" \"10/08/2021\" \"08/11/2021\" \"09/30/2021\" \"10/01/2021\" \"10/07/2021\" \"10/01/2021\" \"10/01/2021\" \"10/01/2021\"\n[225] \"07/10/2021\" \"08/20/2021\" \"09/27/2021\" \"09/02/2021\" \"09/18/2021\" \"09/28/2021\"",
        " \"09/10/2021\" \"09/07/2021\" \"09/20/2021\" \"09/17/2021\" \"09/18/2021\" \"08/25/2021\" \"08/20/2021\" \"09/24/2021\"\n[239] \"09/16/2021\" \"09/03/2021\" \"09/17/2021\" \"09/21/2021\" \"09/10/2021\" \"09/02/2021\" \"08/15/2021\" \"09/01/2021\" \"08/27/2021\" \"06/17/2021\" \"09/09/2021\" \"08/19/2021\" \"08/27/2021\" \"07/14/2021\"\n[253] \"08/18/2021\" \"08/20/2021\" \"08/12/2021\" \"08/06/2021\" \"08/20/2021\" \"08/20/2021\" \"08/12/2021\"\n[1] \"ConvertDatesToChar ProjectDF\"\n[1] \"ConvertDatesToChar\"\n[1] \"ConvertDatesToChar OneWayAggregationDF\"\n[1] \"ConvertDatesToChar\"",
        "\n[1] \"ConvertDatesToChar InteractionAggregationDF\"\n[1] \"ConvertDatesToChar\"\n[1] \"ConvertDatesToChar URARMlsMappingDF\"\n[1] \"ConvertDatesToChar AllowedInteractionsDF\"\n[1] \"ConvertDatesToChar\"\n[1] \"ConvertDatesToChar MlsMappingDF\"\n[1] \"ConvertDatesToChar\"\n[1] \"T4\"\n[1] \"WriteMlsDfToSqlite\"\n[1] \"WriteMlsDfToSqlite\"\n[1] \"A1\"\n[1] \"A2\"\n[1] \"A3\"\n[1] \"A4\"\n[1] \"WriteMlsDfToSqlite\"\n[1] \"Add Fields \"\n[1] \"Rename Fields\"\n[1] \" plyr::rename(projEnv$MlsDataDF, replace = c(  \\\"Age\\\"=\\\"Age\\\",\\\"BathsTotal\\\"=\\\"Baths\\\",\\\"BedsTotal\\\"=\\\"Beds\\\",\\\"GarageSpaces\\\"=\\\"Garage\\\",\\\"MLSNumber\\\"=\\\"MlsNbr\\\",\\\"NbrofFireplaces\\\"=\\\"FrPlcNbr\\\",\\\"ParcelNumber\\\"=\\\"ParcelNbr\\\",\\\"PoolYN\\\"=\\\"PoolYN\\\",\\\"SalePrice\\\"=\\\"SalePrice\\\",\\\"SqFtTotal\\\"=\\\"GLA\\\",\\\"StreetAddressFull\\\"=\\\"Address\\\",\\\"ZipCode\\\"=\\\"Zip\\\",\\\"AreaNbr\\\"=\\\"AreaNbr\\\",\\\"NoOfStories\\\"=\\\"Story\\\",\\\"DaysOffMkt\\\"=\\\"DaysOffMkt\\\"))\"",
        "\n[1] \"XXXXXXXXXXX\"\n[1] \"yyyyyyyyy\"\n[1] \"Convert DF Fields Bool To Binary\"\n[1] \"Compress MlsDataDF\"\n[1] \"nc:  80\"\n[1] \"Compress ProjectDF\"\n[1] \"nc:  2\"\n[1] \"Compress OneWayAggregationDF\"\n[1] \"nc:  2\"\n[1] \"Compress InteractionAggregationDF\"\n[1] \"nc:  15\"\n[1] \"Compress AllowedInteractionsDF\"\n[1] \"nc:  15\"\n[1] \"Compress MlsMappingDF\"\n[1] \"nc:  4\"\n[1] \"Compress ProjectDF\"\n[1] \"nc:  2\"\n[1] \"Compress FieldsRecalculated\"\n[1] \"nc:  0\"\n[1] \"Compress FieldsCalcStage1\"\n[1] \"nc:  0\"\n[1] \"Compress FieldsCalcStage2\"\n[1] \"nc:  0\"",
        "\n[1] \"Compress HelpFields\"\n[1] \"nc:  0\"\n[1] \"Compress RegressionFields\"\n[1] \"nc:  0\"\n[1] \"Finished compression\"\n<environment: 0x00000210b407a420>\n[1] \"Finished compressionA\"\n",
        "> ",
        "",
        "> ",
        "flog.info( \"Stage I\",name=\"F1\")",
        "> ",
        "Stage_1(projEnv)",
        "[1] \"###################   STAGE I   ######################\"\n[1] \"A x\"\n[1] \"B .\"\n[1] \"A x\"\n[1] \"B x\"\n[1] \"C  x\"\n[1] \"A x\"\n[1] \"B .\"\n[1] \"A x\"\n[1] \"B .\"\n[1] \"A x\"\n[1] \"B .\"\n[1] \"A x\"\n[1] \"B .\"\n[1] \"A x\"\n[1] \"B .\"\n[1] \"A x\"\n[1] \"B .\"\n[1] \"A x\"\n[1] \"B .\"\n[1] \"A x\"\n[1] \"B .\"\n[1] \"A x\"\n[1] \"B .\"\n[1] \"A x\"\n[1] \"B .\"\n[1] \"A x\"\n[1] \"B .\"\n[1] \"Returned interaction table: \"\n                       1       2     3    4          5        7      8   9       10        11      12     13    14\nAAARegressionFeature Age AreaNbr",
        " Baths Beds DaysOffMkt FrPlcNbr Garage GLA Latitude Longitude LotSize PoolYN Story\nAge                    .       x     x    x          x        .      x   x        x         x       x      x     x\nAreaNbr                x       .     x    x          x        .      x   x        x         x       x      x     x\nBaths                  x       x     .    x          x        .      x   x        x         x       x      x     x\nBeds                   x       x     x    .          x        .      x   x        x         x",
        "       x      x     x\nDaysOffMkt             x       x     x    x          .        .      x   x        x         x       x      x     x\nFrPlcNbr               .       .     .    .          .        .      x   x        x         x       x      x     x\nGarage                 x       x     x    x          x        x      .   x        x         x       x      x     x\nGLA                    x       x     x    x          x        x      x   .        x         x       x      x     x\nLatitude               x       x",
        "     x    x          x        x      x   x        .         x       x      x     x\nLongitude              x       x     x    x          x        x      x   x        x         .       x      x     x\nLotSize                x       x     x    x          x        x      x   x        x         x       .      x     x\nPoolYN                 x       x     x    x          x        x      x   x        x         x       x      .     x\nStory                  x       x     x    x          x        x      x   x        x         x",
        "       x      x     .\n [1] \"Comp\"                            \"MlsNbr\"                          \"ParcelNbr\"                       \"Address\"                         \"SaleConcessCredit\"              \n [6] \"SaleConcessCreditYN\"             \"SalePrice\"                       \"SaleDate\"                        \"CloseDate\"                       \"GLA\"                            \n[11] \"LotSize\"                         \"Age\"                             \"Baths\"                           \"DOM\"                            ",
        " \"BathsFull\"                      \n[16] \"BathsHalf\"                       \"Beds\"                            \"Garage\"                          \"Story\"                           \"ParkingSpaces\"                  \n[21] \"FrPlcNbr\"                        \"PoolYN\"                          \"AreaNbr\"                         \"AreaName\"                        \"Longitude\"                      \n[26] \"Latitude\"                        \"Longitude6\"                      \"Latitude6\"                       \"View\"                           ",
        " \"ListingDate\"                    \n[31] \"FireplaceYN\"                     \"Fireplaces\"                      \"Pool\"                            \"NoOfUnits\"                       \"Stories\"                        \n[36] \"SecondUnitDesc\"                  \"Style\"                           \"Kitchen\"                         \"Bathroom\"                        \"PropertyType\"                   \n[41] \"CarportMin\"                      \"Bedrooms\"                        \"Zoning\"                          \"YardSqFt\"                       ",
        " \"HOAFee\"                         \n[46] \"HOAExistYN\"                      \"ListPrice\"                       \"PropertySubType\"                 \"Status\"                          \"ConstructionStatus\"             \n[51] \"County\"                          \"DisclosuresURL\"                  \"Acres\"                           \"GreenRatedYN\"                    \"GreenRating\"                    \n[56] \"GrossRentMultiplier\"             \"CapitalizationRate\"              \"LotSizeSqFtTax\"                  \"StreetName\"                     ",
        " \"StreetNumber\"                   \n[61] \"Water\"                           \"YearBuilt\"                       \"Zip\"                             \"SoldRemarks\"                     \"BrandedDroneTour\"               \n[66] \"ExistingStructures\"              \"PropertyCondition\"               \"PostalCity\"                      \"PostalCodePlus4\"                 \"TotalSqFt\"                      \n[71] \"StructureSqFtTax\"                \"SecondaryLivingSpaceSqFt\"        \"SecondaryLivingSpaceDescription\" \"SubdivisionText\"                ",
        " \"BuilderName\"                    \n[76] \"DaysOffMkt\"                      \"DaysOffMkt_K\"                    \"Estimate\"                        \"Residual\"                        \"CQA\"                            \n[1] \"####### CALLING R/earth.  This may take some time, depending on how fast your computers is and how large the MLS file. \"\n[1] \"T1\"\n[1] \"T2\"\n[1] \"T3: projEnv$MlsDataDF$AreaNbr <- factor(projEnv$MlsDataDF$AreaNbr, levels=sort(unique(projEnv$MlsDataDF$AreaNbr)))\"\n[1] \"T4\"\n[1] \"Earth Target:  SalePrice  ~  Age + AreaNbr + Baths + Beds + DaysOffMkt + FrPlcNbr + Garage + GLA + Latitude + Longitude + LotSize + PoolYN + Story\"",
        "\n[1] \"LinPreds:  Age$\"\nINFO [2022-08-31 23:44:20] Earth Target: SalePrice  ~  Age + AreaNbr + Baths + Beds + DaysOffMkt + FrPlcNbr + Garage + GLA + Latitude + Longitude + LotSize + PoolYN + Story\nSomething is wrong; all the RMSE metric values are missing:\n      RMSE        Rsquared        MAE     \n Min.   : NA   Min.   : NA   Min.   : NA  \n 1st Qu.: NA   1st Qu.: NA   1st Qu.: NA  \n Median : NA   Median : NA   Median : NA  \n Mean   :NaN   Mean   :NaN   Mean   :NaN  \n 3rd Qu.: NA   3rd Qu.: NA   3rd Qu.: NA  ",
        "\n Max.   : NA   Max.   : NA   Max.   : NA  \n NA's   :11    NA's   :11    NA's   :11   \n",
        "Error: Stopping\n",
        "In addition: ",
        "Warning message:\n",
        "In nominalTrainWorkflow(x = x, y = y, wts = weights, info = trainInfo,  :",
        "\n ",
        " There were missing values in resampled performance measures.\n",
        "> ",
        "",
        "> ",
        "nr1 <- nrow(projEnv$RegressionFieldsDF)",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "projEnv$Cnames <- c(0)",
        "> ",
        "cname_cnt <- 0",
        "> ",
        "factor_cnt <- 0",
        "> ",
        "",
        "> ",
        "projEnv$RegressionFieldsDF  <- projEnv$RegressionFieldsDF %>% arrange(Stage1Regression)",
        "> ",
        "",
        "> ",
        "for (i in 1:nr1) {",
        "+ ",
        "    fld <- projEnv$RegressionFieldsDF[i, 8]",
        "+ ",
        "    print(paste(\"A\",fld))",
        "+ ",
        "    if (fld == \"x\")",
        "+ ",
        "    {",
        "+ ",
        "        cname_cnt <- cname_cnt + 1",
        "+ ",
        "        projEnv$Cnames[cname_cnt] <- projEnv$RegressionFieldsDF[i, 1]",
        "+ ",
        "    }",
        "+ ",
        "    ",
        "+ ",
        "    factorField <- \"\"",
        "+ ",
        "    # Specify factor fields as factors for earth",
        "+ ",
        "    factorFld <- projEnv$RegressionFieldsDF[i, 7]",
        "+ ",
        "    print(paste(\"B\",factorFld))",
        "+ ",
        "    if (factorFld == \"x\")",
        "+ ",
        "    {",
        "+ ",
        "        print(paste(\"C \", factorFld))",
        "+ ",
        "        factorName <- projEnv$RegressionFieldsDF[i, 1]",
        "+ ",
        "        factorField <- paste(\"projEnv$MlsDataDF$\",   factorName, sep=\"\")",
        "+ ",
        "        ",
        "+ ",
        "        factorField <- factor(eval(parse(text=factorField)))",
        "+ ",
        "        ",
        "+ ",
        "    }",
        "+ ",
        "    ",
        "+ ",
        "}",
        "[1] \"A x\"\n[1] \"B .\"\n[1] \"A x\"\n[1] \"B x\"\n[1] \"C  x\"\n[1] \"A x\"\n[1] \"B .\"\n[1] \"A x\"\n[1] \"B .\"\n[1] \"A x\"\n[1] \"B .\"\n[1] \"A x\"\n[1] \"B .\"\n[1] \"A x\"\n[1] \"B .\"\n[1] \"A x\"\n[1] \"B .\"\n[1] \"A x\"\n[1] \"B .\"\n[1] \"A x\"\n[1] \"B .\"\n[1] \"A x\"\n[1] \"B .\"\n[1] \"A x\"\n[1] \"B .\"\n[1] \"A x\"\n[1] \"B .\"\n",
        "> ",
        "",
        "> ",
        "projEnv$MlsDataDF",
        "\u001B[38;5;246m# A tibble: 259 × 80\u001B[39m\n    Comp MlsNbr      Parcel…¹ Address SaleC…² SaleC…³ SaleP…⁴ SaleDate            CloseDate             GLA LotSize   Age Baths   DOM Baths…⁵ Baths…⁶  Beds Garage Story Parki…⁷ FrPlc…⁸ PoolYN\n   \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m       \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m    \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m   \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m   \u001B[3m\u001B[38;5;246m<lgl>\u001B[39m\u001B[23m     \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<dttm>\u001B[39m\u001B[23m              \u001B[3m\u001B[38;5;246m<dttm>\u001B[39m\u001B[23m              \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m   \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m   \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m   \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m  \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m   \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m   \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m  \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m\n",
        "\u001B[38;5;250m 1\u001B[39m     1 SF422666507 023-038… 311 Ol… No      FALSE   2\u001B[4m2\u001B[24m\u001B[4m3\u001B[24m\u001B[4m0\u001B[24m000 2022-08-09 \u001B[38;5;246m00:00:00\u001B[39m 2022-08-17 \u001B[38;5;246m00:00:00\u001B[39m  \u001B[4m1\u001B[24m740    \u001B[4m3\u001B[24m900    30     3    28       2       1     3      0     2       2       1      0\n\u001B[38;5;250m 2\u001B[39m     2 ML81902926  023-143… 955 Re… \u001B[31mNA\u001B[39m      FALSE   1\u001B[4m3\u001B[24m\u001B[4m8\u001B[24m\u001B[4m5\u001B[24m000 2022-08-05 \u001B[38;5;246m00:00:00\u001B[39m 2022-08-05 \u001B[38;5;246m00:00:00\u001B[39m  \u001B[4m1\u001B[24m110    \u001B[4m6\u001B[24m350    62     2     0       2       0     3      2     1       0       0      0\n",
        "\u001B[38;5;250m 3\u001B[39m     3 SF422662821 009-551… 387 An… Yes     FALSE   1\u001B[4m3\u001B[24m\u001B[4m0\u001B[24m\u001B[4m0\u001B[24m000 2022-07-25 \u001B[38;5;246m00:00:00\u001B[39m 2022-08-17 \u001B[38;5;246m00:00:00\u001B[39m  \u001B[4m1\u001B[24m658    \u001B[4m4\u001B[24m000    57     3    39       2       1     4      0     1       1       1      0\n\u001B[38;5;250m 4\u001B[39m     4 ML81898587  016-060… 160 Sa… \u001B[31mNA\u001B[39m      FALSE    \u001B[4m9\u001B[24m\u001B[4m1\u001B[24m\u001B[4m0\u001B[24m000 2022-07-23 \u001B[38;5;246m00:00:00\u001B[39m 2022-08-22 \u001B[38;5;246m00:00:00\u001B[39m   850    \u001B[4m2\u001B[24m250   102     1    23       1       0     2      0     1       0       1      0\n",
        "\u001B[38;5;250m 5\u001B[39m     5 CC41000652  016-232… 432 Gr… \u001B[31mNA\u001B[39m      FALSE   1\u001B[4m6\u001B[24m\u001B[4m7\u001B[24m\u001B[4m5\u001B[24m000 2022-07-22 \u001B[38;5;246m00:00:00\u001B[39m 2022-08-16 \u001B[38;5;246m00:00:00\u001B[39m  \u001B[4m2\u001B[24m500    \u001B[4m6\u001B[24m000    42     3    14       2       1     4      2     1       0       2      0\n\u001B[38;5;250m 6\u001B[39m     6 ML81898819  018-131… 218 Ca… \u001B[31mNA\u001B[39m      FALSE   1\u001B[4m3\u001B[24m\u001B[4m5\u001B[24m\u001B[4m0\u001B[24m000 2022-07-21 \u001B[38;5;246m00:00:00\u001B[39m 2022-07-28 \u001B[38;5;246m00:00:00\u001B[39m  \u001B[4m1\u001B[24m200    \u001B[4m5\u001B[24m000    69     1     7       1       0     3      2     1       0       0      0\n",
        "\u001B[38;5;250m 7\u001B[39m   100 ML81900032  009-069… 332 Fa… \u001B[31mNA\u001B[39m      FALSE   1\u001B[4m7\u001B[24m\u001B[4m5\u001B[24m\u001B[4m0\u001B[24m000 2022-07-19 \u001B[38;5;246m00:00:00\u001B[39m 2022-08-19 \u001B[38;5;246m00:00:00\u001B[39m  \u001B[4m2\u001B[24m980    \u001B[4m7\u001B[24m680    45     3     6       2       1     3      2     2       2       1      0\n\u001B[38;5;250m 8\u001B[39m   101 ML81898679  023-251… 1292 G… \u001B[31mNA\u001B[39m      FALSE   1\u001B[4m1\u001B[24m\u001B[4m5\u001B[24m\u001B[4m0\u001B[24m000 2022-07-19 \u001B[38;5;246m00:00:00\u001B[39m 2022-08-12 \u001B[38;5;246m00:00:00\u001B[39m  \u001B[4m1\u001B[24m040    \u001B[4m8\u001B[24m992    67     1    18       1       0     3      2     1       0       1      0\n",
        "\u001B[38;5;250m 9\u001B[39m   102 BE40997276  009-532… 653 Fo… \u001B[31mNA\u001B[39m      FALSE   1\u001B[4m2\u001B[24m\u001B[4m2\u001B[24m\u001B[4m5\u001B[24m000 2022-07-15 \u001B[38;5;246m00:00:00\u001B[39m 2022-08-05 \u001B[38;5;246m00:00:00\u001B[39m  \u001B[4m1\u001B[24m260    \u001B[4m4\u001B[24m444    58     2    34       1       1     3      1     2       0       1      0\n\u001B[38;5;250m10\u001B[39m   103 ML81889300  022-382… 1102 R… \u001B[31mNA\u001B[39m      FALSE   1\u001B[4m8\u001B[24m\u001B[4m4\u001B[24m\u001B[4m0\u001B[24m000 2022-07-15 \u001B[38;5;246m00:00:00\u001B[39m 2022-07-22 \u001B[38;5;246m00:00:00\u001B[39m  \u001B[4m2\u001B[24m020    \u001B[4m7\u001B[24m150    50     3    70       2       1     4      2     2       0       1      0\n",
        "\u001B[38;5;246m# … with 249 more rows, 58 more variables: AreaNbr <fct>, AreaName <chr>, Longitude <dbl>, Latitude <dbl>, Longitude6 <dbl>, Latitude6 <dbl>, View <chr>, ListingDate <dttm>,\u001B[39m\n\u001B[38;5;246m#   FireplaceYN <dbl>, Fireplaces <chr>, Pool <chr>, NoOfUnits <lgl>, Stories <chr>, SecondUnitDesc <chr>, Style <chr>, Kitchen <chr>, Bathroom <chr>, PropertyType <chr>, CarportMin <dbl>,\u001B[39m\n\u001B[38;5;246m#   Bedrooms <chr>, Zoning <chr>, YardSqFt <lgl>, HOAFee <dbl>, HOAExistYN <lgl>, ListPrice <dbl>, PropertySubType <chr>, Status <chr>, ConstructionStatus <chr>, County <chr>,\u001B[39m\n",
        "\u001B[38;5;246m#   DisclosuresURL <chr>, Acres <dbl>, GreenRatedYN <lgl>, GreenRating <lgl>, GrossRentMultiplier <lgl>, CapitalizationRate <lgl>, LotSizeSqFtTax <dbl>, StreetName <chr>, StreetNumber <dbl>,\u001B[39m\n\u001B[38;5;246m#   Water <chr>, YearBuilt <dbl>, Zip <chr>, SoldRemarks <chr>, BrandedDroneTour <chr>, ExistingStructures <chr>, PropertyCondition <chr>, PostalCity <chr>, PostalCodePlus4 <lgl>,\u001B[39m\n\u001B[38;5;246m#   TotalSqFt <lgl>, StructureSqFtTax <dbl>, SecondaryLivingSpaceSqFt <dbl>, SecondaryLivingSpaceDescription <chr>, SubdivisionText <chr>, BuilderName <chr>, DaysOffMkt <dbl>,\u001B[39m\n",
        "\u001B[38;5;246m#   DaysOffMkt_K <dbl>, Estimate <dbl>, Residual <dbl>, CQA <dbl>, and abbreviated variable names ¹​ParcelNbr, ²​SaleConcessCredit, ³​SaleConcessCreditYN, ⁴​SalePrice, ⁵​BathsFull, ⁶​BathsHalf, …\u001B[39m\n\u001B[38;5;246m# ℹ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names\u001B[39m\n",
        "> ",
        "projEnv$MlsDataDF$AreaNbr",
        "  [1] 650 651 662 658 657 654 660 651 662 653 651 653 661 651 662 652 653 651 660 653 661 651 653 659 651 651 659 651 651 653 657 654 652 652 650 658 653 662 658 653 662 651 654 651 662 661\n [47] 659 660 661 654 659 651 657 658 654 651 659 651 662 657 653 662 655 651 651 656 653 651 653 654 650 653 654 654 653 661 662 653 657 651 661 654 651 660 661 662 659 654 653 651 658 653\n [93] 658 661 662 662 653 662 660 651 653 652 659 659 655 651 651 652 651 660 651 653 659 651 652 659 651 651 661 658 653 651 651 662",
        " 662 659 657 662 656 651 651 657 655 651 660 660 662 656\n[139] 651 659 659 653 651 650 662 659 653 656 651 651 652 653 653 652 659 662 662 659 662 662 651 662 654 653 650 651 651 652 652 660 651 660 662 653 653 654 661 659 651 657 658 657 662 653\n[185] 662 662 651 662 661 662 662 662 661 650 660 654 662 651 653 653 658 651 651 653 661 650 651 651 660 654 662 657 651 658 658 660 662 652 660 660 660 653 662 662 651 652 651 653 659 653\n[231] 659 653 651 651 651 658 650 657 656 656 658 654 653 659 653 651 653 651",
        " 653 662 662 650 662 658 661 652 654 651 662\nLevels: 650 651 652 653 654 655 656 657 658 659 660 661 662\n",
        "> ",
        "factorField",
        "[1] \"\"\n",
        "> ",
        "",
        "> ",
        "nr1",
        "[1] 13\n",
        "> ",
        "projEnv$RegressionFieldsDF",
        "   Stage1Regression Linear Stage2Regression RegressionFieldPairs AAA.Regression.Feature Aggregate.To Factor Include\n1               Age      x         Residual                    .                    Age    ActualAge      .       x\n2           AreaNbr      .                .                    .                AreaNbr     Location      x       x\n3             Baths      .              CQA                    .                  Baths    RoomCount      .       x\n4              Beds      .                .                    .",
        "                   Beds    RoomCount      .       x\n5        DaysOffMkt      .                .                    .             DaysOffMkt Date_Of_Sale      .       x\n6          FrPlcNbr      .                .                    .               FrPlcNbr  Other.FrPlc      .       x\n7            Garage      .                .                    .                 Garage       Garage      .       x\n8               GLA      .                .                    .                    GLA          GLA      .       x",
        "\n9          Latitude      .                .                    .               Latitude     Location      .       x\n10        Longitude      .                .                    .              Longitude     Location      .       x\n11          LotSize      .                .                    .                LotSize         Site      .       x\n12           PoolYN      .                .                    .                 PoolYN   Other.Pool      .       x\n13            Story      .                .                    .",
        "                  Story        Story      .       x\n",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "projEnv$RegressionFieldsDF[2, 1]",
        "[1] \"AreaNbr\"\n",
        "> ",
        "factorName <-projEnv$RegressionFieldsDF[2, 1]",
        "> ",
        "facteorName",
        "Error: object 'facteorName' not found\n",
        "> ",
        "factorName",
        "[1] \"AreaNbr\"\n",
        "> ",
        "factorField <- paste(\"projEnv$MlsDataDF$\",   factorName, sep=\"\")",
        "> ",
        "factorField",
        "[1] \"projEnv$MlsDataDF$AreaNbr\"\n",
        "> ",
        "factor(eval(parse(text=factorField)))",
        "  [1] 650 651 662 658 657 654 660 651 662 653 651 653 661 651 662 652 653 651 660 653 661 651 653 659 651 651 659 651 651 653 657 654 652 652 650 658 653 662 658 653 662 651 654 651 662 661\n [47] 659 660 661 654 659 651 657 658 654 651 659 651 662 657 653 662 655 651 651 656 653 651 653 654 650 653 654 654 653 661 662 653 657 651 661 654 651 660 661 662 659 654 653 651 658 653\n [93] 658 661 662 662 653 662 660 651 653 652 659 659 655 651 651 652 651 660 651 653 659 651 652 659 651 651 661 658 653 651 651 662",
        " 662 659 657 662 656 651 651 657 655 651 660 660 662 656\n[139] 651 659 659 653 651 650 662 659 653 656 651 651 652 653 653 652 659 662 662 659 662 662 651 662 654 653 650 651 651 652 652 660 651 660 662 653 653 654 661 659 651 657 658 657 662 653\n[185] 662 662 651 662 661 662 662 662 661 650 660 654 662 651 653 653 658 651 651 653 661 650 651 651 660 654 662 657 651 658 658 660 662 652 660 660 660 653 662 662 651 652 651 653 659 653\n[231] 659 653 651 651 651 658 650 657 656 656 658 654 653 659 653 651 653 651",
        " 653 662 662 650 662 658 661 652 654 651 662\nLevels: 650 651 652 653 654 655 656 657 658 659 660 661 662\n",
        "> ",
        "factorField <- paste(\"projEnv$MlsDataDF$\",   factorName, sep=\"\")",
        "> ",
        "factorField",
        "[1] \"projEnv$MlsDataDF$AreaNbr\"\n",
        "> ",
        "factorField <- factor(eval(parse(text=factorField)))",
        "> ",
        "factorField",
        "  [1] 650 651 662 658 657 654 660 651 662 653 651 653 661 651 662 652 653 651 660 653 661 651 653 659 651 651 659 651 651 653 657 654 652 652 650 658 653 662 658 653 662 651 654 651 662 661\n [47] 659 660 661 654 659 651 657 658 654 651 659 651 662 657 653 662 655 651 651 656 653 651 653 654 650 653 654 654 653 661 662 653 657 651 661 654 651 660 661 662 659 654 653 651 658 653\n [93] 658 661 662 662 653 662 660 651 653 652 659 659 655 651 651 652 651 660 651 653 659 651 652 659 651 651 661 658 653 651 651 662",
        " 662 659 657 662 656 651 651 657 655 651 660 660 662 656\n[139] 651 659 659 653 651 650 662 659 653 656 651 651 652 653 653 652 659 662 662 659 662 662 651 662 654 653 650 651 651 652 652 660 651 660 662 653 653 654 661 659 651 657 658 657 662 653\n[185] 662 662 651 662 661 662 662 662 661 650 660 654 662 651 653 653 658 651 651 653 661 650 651 651 660 654 662 657 651 658 658 660 662 652 660 660 660 653 662 662 651 652 651 653 659 653\n[231] 659 653 651 651 651 658 650 657 656 656 658 654 653 659 653 651 653 651",
        " 653 662 662 650 662 658 661 652 654 651 662\nLevels: 650 651 652 653 654 655 656 657 658 659 660 661 662\n",
        "> ",
        "projEnv$MLDataDF$AreaNbr",
        "NULL\n",
        "> ",
        "projEnv$MLDataDF$AreaNbr  <- factor(eval(parse(text=factorField)))",
        "> ",
        "projEnv$MLDataDF$AreaNbr",
        "[1] 13\nLevels: 13\n",
        "> ",
        "factor(eval(parse(text=factorField)))",
        "[1] 13\nLevels: 13\n",
        "> ",
        "factorField <- paste(\"projEnv$MlsDataDF$\",   factorName, sep=\"\")",
        "> ",
        "factorName",
        "[1] \"AreaNbr\"\n",
        "> ",
        "factorField <- factor(eval(parse(text=factorField)))",
        "> ",
        "factorField",
        "  [1] 650 651 662 658 657 654 660 651 662 653 651 653 661 651 662 652 653 651 660 653 661 651 653 659 651 651 659 651 651 653 657 654 652 652 650 658 653 662 658 653 662 651 654 651 662 661\n [47] 659 660 661 654 659 651 657 658 654 651 659 651 662 657 653 662 655 651 651 656 653 651 653 654 650 653 654 654 653 661 662 653 657 651 661 654 651 660 661 662 659 654 653 651 658 653\n [93] 658 661 662 662 653 662 660 651 653 652 659 659 655 651 651 652 651 660 651 653 659 651 652 659 651 651 661 658 653 651 651 662",
        " 662 659 657 662 656 651 651 657 655 651 660 660 662 656\n[139] 651 659 659 653 651 650 662 659 653 656 651 651 652 653 653 652 659 662 662 659 662 662 651 662 654 653 650 651 651 652 652 660 651 660 662 653 653 654 661 659 651 657 658 657 662 653\n[185] 662 662 651 662 661 662 662 662 661 650 660 654 662 651 653 653 658 651 651 653 661 650 651 651 660 654 662 657 651 658 658 660 662 652 660 660 660 653 662 662 651 652 651 653 659 653\n[231] 659 653 651 651 651 658 650 657 656 656 658 654 653 659 653 651 653 651",
        " 653 662 662 650 662 658 661 652 654 651 662\nLevels: 650 651 652 653 654 655 656 657 658 659 660 661 662\n",
        "> ",
        "factorField <- paste(\"projEnv$MlsDataDF$\",   factorName, sep=\"\")",
        "> ",
        "projEnv$MLDataDF$AreaNbr <- factor(eval(parse(text=factorField)))",
        "> ",
        "projEnv$MLDataDF$AreaNbr",
        "  [1] 650 651 662 658 657 654 660 651 662 653 651 653 661 651 662 652 653 651 660 653 661 651 653 659 651 651 659 651 651 653 657 654 652 652 650 658 653 662 658 653 662 651 654 651 662 661\n [47] 659 660 661 654 659 651 657 658 654 651 659 651 662 657 653 662 655 651 651 656 653 651 653 654 650 653 654 654 653 661 662 653 657 651 661 654 651 660 661 662 659 654 653 651 658 653\n [93] 658 661 662 662 653 662 660 651 653 652 659 659 655 651 651 652 651 660 651 653 659 651 652 659 651 651 661 658 653 651 651 662",
        " 662 659 657 662 656 651 651 657 655 651 660 660 662 656\n[139] 651 659 659 653 651 650 662 659 653 656 651 651 652 653 653 652 659 662 662 659 662 662 651 662 654 653 650 651 651 652 652 660 651 660 662 653 653 654 661 659 651 657 658 657 662 653\n[185] 662 662 651 662 661 662 662 662 661 650 660 654 662 651 653 653 658 651 651 653 661 650 651 651 660 654 662 657 651 658 658 660 662 652 660 660 660 653 662 662 651 652 651 653 659 653\n[231] 659 653 651 651 651 658 650 657 656 656 658 654 653 659 653 651 653 651",
        " 653 662 662 650 662 658 661 652 654 651 662\nLevels: 650 651 652 653 654 655 656 657 658 659 660 661 662\n",
        "> ",
        "factorField",
        "[1] \"projEnv$MlsDataDF$AreaNbr\"\n",
        "> ",
        "eval(factorField)",
        "[1] \"projEnv$MlsDataDF$AreaNbr\"\n",
        "> ",
        "nr1 <- nrow(projEnv$RegressionFieldsDF)",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "projEnv$Cnames <- c(0)",
        "> ",
        "cname_cnt <- 0",
        "> ",
        "factor_cnt <- 0",
        "> ",
        "",
        "> ",
        "projEnv$RegressionFieldsDF  <- projEnv$RegressionFieldsDF %>% arrange(Stage1Regression)",
        "> ",
        "",
        "> ",
        "for (i in 1:nr1) {",
        "+ ",
        "    fld <- projEnv$RegressionFieldsDF[i, 8]",
        "+ ",
        "    print(paste(\"A\",fld))",
        "+ ",
        "    if (fld == \"x\")",
        "+ ",
        "    {",
        "+ ",
        "        cname_cnt <- cname_cnt + 1",
        "+ ",
        "        projEnv$Cnames[cname_cnt] <- projEnv$RegressionFieldsDF[i, 1]",
        "+ ",
        "    }",
        "+ ",
        "    ",
        "+ ",
        "    factorField <- \"\"",
        "+ ",
        "    # Specify factor fields as factors for earth",
        "+ ",
        "    factorFld <- projEnv$RegressionFieldsDF[i, 7]",
        "+ ",
        "    print(paste(\"B\",factorFld))",
        "+ ",
        "    if (factorFld == \"x\")",
        "+ ",
        "    {",
        "+ ",
        "        print(paste(\"C \", factorFld))",
        "+ ",
        "        factorName <- projEnv$RegressionFieldsDF[i, 1]",
        "+ ",
        "        factorField <- paste(\"projEnv$MlsDataDF$\",   factorName, sep=\"\")",
        "+ ",
        "        ",
        "+ ",
        "        factorCalc <- paste(factorField, \"<- factor(eval(parse(text=factorField)))\",sep=\"\")",
        "+ ",
        "        eval(parse(text=factorCalc))",
        "+ ",
        "        ",
        "+ ",
        "    }",
        "+ ",
        "    ",
        "+ ",
        "}",
        "[1] \"A x\"\n[1] \"B .\"\n[1] \"A x\"\n[1] \"B x\"\n[1] \"C  x\"\n[1] \"A x\"\n[1] \"B .\"\n[1] \"A x\"\n[1] \"B .\"\n[1] \"A x\"\n[1] \"B .\"\n[1] \"A x\"\n[1] \"B .\"\n[1] \"A x\"\n[1] \"B .\"\n[1] \"A x\"\n[1] \"B .\"\n[1] \"A x\"\n[1] \"B .\"\n[1] \"A x\"\n[1] \"B .\"\n[1] \"A x\"\n[1] \"B .\"\n[1] \"A x\"\n[1] \"B .\"\n[1] \"A x\"\n[1] \"B .\"\n",
        "> ",
        "projEnv$MLDataDF$AreaNbr",
        "  [1] 650 651 662 658 657 654 660 651 662 653 651 653 661 651 662 652 653 651 660 653 661 651 653 659 651 651 659 651 651 653 657 654 652 652 650 658 653 662 658 653 662 651 654 651 662 661\n [47] 659 660 661 654 659 651 657 658 654 651 659 651 662 657 653 662 655 651 651 656 653 651 653 654 650 653 654 654 653 661 662 653 657 651 661 654 651 660 661 662 659 654 653 651 658 653\n [93] 658 661 662 662 653 662 660 651 653 652 659 659 655 651 651 652 651 660 651 653 659 651 652 659 651 651 661 658 653 651 651 662",
        " 662 659 657 662 656 651 651 657 655 651 660 660 662 656\n[139] 651 659 659 653 651 650 662 659 653 656 651 651 652 653 653 652 659 662 662 659 662 662 651 662 654 653 650 651 651 652 652 660 651 660 662 653 653 654 661 659 651 657 658 657 662 653\n[185] 662 662 651 662 661 662 662 662 661 650 660 654 662 651 653 653 658 651 651 653 661 650 651 651 660 654 662 657 651 658 658 660 662 652 660 660 660 653 662 662 651 652 651 653 659 653\n[231] 659 653 651 651 651 658 650 657 656 656 658 654 653 659 653 651 653 651",
        " 653 662 662 650 662 658 661 652 654 651 662\nLevels: 650 651 652 653 654 655 656 657 658 659 660 661 662\n",
        "> ",
        "",
        "> ",
        "projEnv$INTERACTION_TABLE <-  projEnv$INTERACTION_TABLE[rnms %in% regFldsR, ]",
        "Error in rnms %in% regFldsR : object 'rnms' not found\n",
        "\nRestarting R session...\n\n",
        "> ",
        "devtools::load_all(\".\")",
        "\u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m Loading \u001B[34mMkt01\u001B[38;5;232m\u001B[39m\n",
        "\nAttaching package: ‘dplyr’\n\n",
        "The following objects are masked from ‘package:stats’:\n\n    filter, lag\n\n",
        "The following objects are masked from ‘package:base’:\n\n    intersect, setdiff, setequal, union\n\n",
        "── \u001B[1mAttaching packages\u001B[22m ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── tidyverse 1.3.2 ──\n\u001B[32m✔\u001B[39m \u001B[34mggplot2\u001B[39m 3.3.6     \u001B[32m✔\u001B[39m \u001B[34mpurrr  \u001B[39m 0.3.4\n\u001B[32m✔\u001B[39m \u001B[34mtibble \u001B[39m 3.1.7     \u001B[32m✔\u001B[39m \u001B[34mstringr\u001B[39m 1.4.0\n\u001B[32m✔\u001B[39m \u001B[34mtidyr  \u001B[39m 1.2.0     \u001B[32m✔\u001B[39m \u001B[34mforcats\u001B[39m 0.5.1\n",
        "── \u001B[1mConflicts\u001B[22m ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── tidyverse_conflicts() ──\n\u001B[31m✖\u001B[39m \u001B[34mtidyr\u001B[39m::\u001B[32mextract()\u001B[39m   masks \u001B[34mmagrittr\u001B[39m::extract()\n\u001B[31m✖\u001B[39m \u001B[34mdplyr\u001B[39m::\u001B[32mfilter()\u001B[39m    masks \u001B[34mstats\u001B[39m::filter()\n\u001B[31m✖\u001B[39m \u001B[34mdplyr\u001B[39m::\u001B[32mlag()\u001B[39m       masks \u001B[34mstats\u001B[39m::lag()\n\u001B[31m✖\u001B[39m \u001B[34mpurrr\u001B[39m::\u001B[32mset_names()\u001B[39m masks \u001B[34mmagrittr\u001B[39m::set_names()\n",
        "\nAttaching package: ‘lubridate’\n\n",
        "The following objects are masked from ‘package:base’:\n\n    date, intersect, setdiff, union\n\n",
        "\nAttaching package: ‘collections’\n\n",
        "The following object is masked from ‘package:utils’:\n\n    stack\n\n",
        "Warning message:\n",
        "\u001B[38;5;232m── \u001B[1mConflicts\u001B[22m ─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── Mkt01 conflicts\n──\n\u001B[31m✖\u001B[38;5;232m `\u001B[32mAddFields\u001B[38;5;232m` masks `\u001B[34mMkt01\u001B[38;5;232m::AddFields()`.\n\u001B[31m✖\u001B[38;5;232m `\u001B[32mallowedInteractions\u001B[38;5;232m` masks `\u001B[34mMkt01\u001B[38;5;232m::allowedInteractions()`.\n\u001B[31m✖\u001B[38;5;232m `\u001B[32mcallEarth\u001B[38;5;232m` masks `\u001B[34mMkt01\u001B[38;5;232m::callEarth()`.\n  … and more.\n\u001B[36mℹ\u001B[38;5;232m \u001B[90mDid you accidentally source a file rather than using `load_all()`?\u001B[38;5;232m\n  \u001B[90mRun `rm(list = c(\"AddFields\", \"allowedInteractions\", \"callEarth\", \"CheckMlsMappingOriginalNamesAreInMlsData\", \"CompressColumnNames\", \"CompressColumnNamesAllDF\", \"ConvertBoolenToBinary\",\u001B[38;5;232m\n  \u001B[90m\"ConvertDatesToChar\", \"ConvertDatesToCharAllDF\", \"ConvertDfFieldBoolToBinary\", \"ConvertNaToBoolFalse\", \"convolveCpp\", \"DateExample\", \"DoCalculations1\", \"FibCpp0\", \"findContribVars\",\u001B[38;5;232m\n  \u001B[90m\"IsDebugMode\", \"LoadMappingsExcelToDataFrame\", \"LoadMlsExcelToDataFrame\", \"makeDataFrame\", \"modifyDataFrame\", \"one\", \"p1_initialize\", \"rcpp_hello_world\", \"RenameFieldsAndSetAvailable\",\u001B[38;5;232m\n  \u001B[90m\"RepPeriodWithSpaceColumnNames\", \"SetDebugMode\", \"SetUp_0\", \"SetUpProjectEnvironment\", \"signC\", \"Stage_1\", \"Stage_2\", \"timesTwo\", \"WriteConfigMappingsDfToSqlite\", \"WriteMlsDfToSqlite\"))`\u001B[38;5;232m\n  \u001B[90mto remove the conflicts.\u001B[38;5;232m\u001B[39m \n",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "###############################################   Run.R #########################################",
        "> ",
        "#' Author:       Wm. Bert Craytor",
        "> ",
        "#' Location:     242 Clifton Rd., Pacifica, CA 94044, USA",
        "> ",
        "#' Date:         07/02/2021",
        "> ",
        "#' Description:  This is the main R executable that should run everything else.  You should make",
        "> ",
        "#'               a copy of this for each project.  I use a name like ...Pacifica_CliftonRd_1234 for",
        "> ",
        "#'               the end of the path to the project data files and project name.",
        "> ",
        "#'",
        "> ",
        "#'                SetUpProjectEnvironment( projEnv,",
        "> ",
        "#'                                        codeFolder,",
        "> ",
        "#'                                        projectParentFolder,",
        "> ",
        "#'                                        projectID,",
        "> ",
        "#'                                        mlsDataFile,",
        "> ",
        "#'                                        mlsSheet,",
        "> ",
        "#'                                        subjectCQA)",
        "> ",
        "#'",
        "> ",
        "#'",
        "> ",
        "#'              \"projEnv\" is the name you give the project environment.  This is variable that stores the central",
        "> ",
        "#'              project information throughout the execution.",
        "> ",
        "#'              \"codeFolder\" is the parent folder for all of this KVEsfr code (separte from your working project folder)",
        "> ",
        "#'              \"projectParentFolder\" is the path to the parent folder for all of your projects",
        "> ",
        "#'              \"projectID\", is the name of the sub-folder under the projectParentFolder that contains your project (property appraisal) fieles",
        "> ",
        "#'                        - it is assumed that under this folder is another folder called \"Earth\" that contains all of your R/earth project",
        "> ",
        "#'                          and data files.  It is further assumed that your Mapping file will be in the folder under this one called \"Config\",",
        "> ",
        "#'                          that the data input and output files will be under the folder called \"Mls\"",
        "> ",
        "#'                          That you should have created a folder called \"DB\" for the SQLite database, a folder called \"Log\" for log files",
        "> ",
        "#'                          and a folder called Out for spurious output files. The log file can be useful for seeing how long the various steps",
        "> ",
        "#'                          take, in particular the call to R/earth.",
        "> ",
        "#'              \"mlsDataFile\", is the name of the MLS data file, without the .xlsx extension.",
        "> ",
        "#'              \"mlsSheet\", is the name of the data sheet in the data file, where the MLS data is stored",
        "> ",
        "#'              \"subjectCQA\", is the CQA value you want to assign to the  subject property.",
        "> ",
        "#'",
        "> ",
        "#'               So, below replace \"CITY\", \"ROAD\" and \"NUMBER\" with the appropriate data:",
        "> ",
        "#'",
        "> ",
        "#'               SetUp_0(projEnv,\"C:/RPackages/KVEsfr/\",\"C:/Users/XXXXXXX/Documents/YYYY/PVN2021/\",\"CITY_ROAD_NUMBER\",\"CITY_ROAD_NUMBER\",\"MLSData\", 1.1)",
        "> ",
        "#'",
        "> ",
        "#' Notes:        1.  This program is free software; you can redistribute it and/or modify",
        "> ",
        "#'                   it under the terms of the GNU General Public License as published by",
        "> ",
        "#'                   the Free Software Foundation; either version 3 of the License, or",
        "> ",
        "#'                   (at your option) any later version.",
        "> ",
        "#'",
        "> ",
        "#'               2.  This program is distributed in the hope that it will be useful,",
        "> ",
        "#'                   but WITHOUT ANY WARRANTY; without even the implied warranty of",
        "> ",
        "#'                   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",
        "> ",
        "#'                   GNU General Public License for more details.",
        "> ",
        "#'",
        "> ",
        "#'               3.   A copy of the GNU General Public License is available at",
        "> ",
        "#'                   http://www.r-project.org/Licenses",
        "> ",
        "#'",
        "> ",
        "#'####################################################################################################",
        "> ",
        "codeFolder <- \"C:/Order_1/RPackages/Mkt01/\";",
        "> ",
        "library(Rcpp)",
        "> ",
        "cppFilePath <- paste(codeFolder,\"src/CqaMap.cpp\",sep=\"\")",
        "> ",
        "sourceCpp(cppFilePath)",
        "> ",
        "",
        "> ",
        "library(stats)",
        "> ",
        "library(foreach)",
        "\nAttaching package: ‘foreach’\n\n",
        "The following objects are masked from ‘package:purrr’:\n\n    accumulate, when\n\n",
        "> ",
        "#library(magrittr)",
        "> ",
        "library(Matrix)",
        "\nAttaching package: ‘Matrix’\n\n",
        "The following objects are masked from ‘package:tidyr’:\n\n    expand, pack, unpack\n\n",
        "> ",
        "",
        "> ",
        "library(openxlsx)",
        "> ",
        "",
        "> ",
        "library(ggplotAssist)",
        "> ",
        "library(writexl)",
        "> ",
        "",
        "> ",
        "library(splines)",
        "> ",
        "",
        "> ",
        "library(Formula)",
        "> ",
        "library(plotrix)",
        "> ",
        "library(rpart)",
        "> ",
        "library(TeachingDemos)",
        "> ",
        "library(gam)",
        "Loaded gam 1.20.2\n\n",
        "> ",
        "library(gbm)",
        "Loaded gbm 2.1.8\n",
        "> ",
        "",
        "> ",
        "library(glmnet)",
        "Loaded glmnet 4.1-4\n",
        "> ",
        "library(ParamHelpers)",
        "> ",
        "library(mlr3)",
        "Warning message:\n",
        "In callback() :",
        "\n ",
        " Packages 'paradox' and 'ParamHelpers' are conflicting and should not be loaded in the same session\n",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "library(neuralnet)",
        "\nAttaching package: ‘neuralnet’\n\n",
        "The following object is masked from ‘package:dplyr’:\n\n    compute\n\n",
        "> ",
        "library(glmnetUtils)",
        "\nAttaching package: ‘glmnetUtils’\n\n",
        "The following objects are masked from ‘package:glmnet’:\n\n    cv.glmnet, glmnet\n\n",
        "> ",
        "library(mgcv)",
        "Loading required package: nlme\n",
        "\nAttaching package: ‘nlme’\n\n",
        "The following object is masked from ‘package:dplyr’:\n\n    collapse\n\n",
        "This is mgcv 1.8-40. For overview type 'help(\"mgcv-package\")'.\n",
        "\nAttaching package: ‘mgcv’\n\n",
        "The following objects are masked from ‘package:gam’:\n\n    gam, gam.control, gam.fit, s\n\n",
        "> ",
        "library(mda)",
        "Loading required package: class\n",
        "Loaded mda 0.5-3\n\n",
        "> ",
        "library(partykit)",
        "Loading required package: grid\n",
        "Loading required package: libcoin\n",
        "Loading required package: mvtnorm\n",
        "> ",
        "library(MASS)",
        "\nAttaching package: ‘MASS’\n\n",
        "The following object is masked from ‘package:dplyr’:\n\n    select\n\n",
        "> ",
        "",
        "> ",
        "library(stringi)",
        "> ",
        "library(base64enc)",
        "> ",
        "library(backports)",
        "> ",
        "library(Hmisc)",
        "Loading required package: lattice\n",
        "Loading required package: survival\n",
        "\nAttaching package: ‘Hmisc’\n\n",
        "The following objects are masked from ‘package:TeachingDemos’:\n\n    cnvrt.coords, subplot\n\n",
        "The following objects are masked from ‘package:dplyr’:\n\n    src, summarize\n\n",
        "The following objects are masked from ‘package:base’:\n\n    format.pval, units\n\n",
        "> ",
        "",
        "> ",
        "library(R.utils)",
        "Loading required package: R.oo\n",
        "Loading required package: R.methodsS3\n",
        "R.methodsS3 v1.8.2 (2022-06-13 22:00:14 UTC) successfully loaded. See ?R.methodsS3 for help.\n",
        "R.oo v1.25.0 (2022-06-12 02:20:02 UTC) successfully loaded. See ?R.oo for help.\n",
        "\nAttaching package: ‘R.oo’\n\n",
        "The following object is masked from ‘package:R.methodsS3’:\n\n    throw\n\n",
        "The following object is masked from ‘package:magrittr’:\n\n    equals\n\n",
        "The following objects are masked from ‘package:methods’:\n\n    getClasses, getMethods\n\n",
        "The following objects are masked from ‘package:base’:\n\n    attach, detach, load, save\n\n",
        "R.utils v2.12.0 (2022-06-28 03:20:05 UTC) successfully loaded. See ?R.utils for help.\n",
        "\nAttaching package: ‘R.utils’\n\n",
        "The following object is masked from ‘package:Hmisc’:\n\n    capitalize\n\n",
        "The following object is masked from ‘package:mlr3’:\n\n    resample\n\n",
        "The following object is masked from ‘package:ParamHelpers’:\n\n    isVector\n\n",
        "The following object is masked from ‘package:tidyr’:\n\n    extract\n\n",
        "The following object is masked from ‘package:magrittr’:\n\n    extract\n\n",
        "The following object is masked from ‘package:utils’:\n\n    timestamp\n\n",
        "The following objects are masked from ‘package:base’:\n\n    cat, commandArgs, getOption, isOpen, nullfile, parse, warnings\n\n",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "library(collections)",
        "> ",
        "",
        "> ",
        "library(utils)",
        "> ",
        "library(R.oo)",
        "> ",
        "",
        "> ",
        "library(inline)",
        "\nAttaching package: ‘inline’\n\n",
        "The following object is masked from ‘package:Rcpp’:\n\n    registerPlugin\n\n",
        "> ",
        "",
        "> ",
        "library(RSQLite)",
        "> ",
        "library(devtools)",
        "Loading required package: usethis\n",
        "\nAttaching package: ‘devtools’\n\n",
        "The following objects are masked from ‘package:R.oo’:\n\n    check, unload\n\n",
        "> ",
        "library(roxygen2)",
        "> ",
        "library(here)",
        "here() starts at C:/Order_1/RPackages/Mkt01\n",
        "> ",
        "library(rgl)",
        "\nAttaching package: ‘rgl’\n\n",
        "The following object is masked from ‘package:plotrix’:\n\n    mtext3d\n\n",
        "> ",
        "library(scatterplot3d)",
        "> ",
        "library(ggThemeAssist)",
        "> ",
        "library(futile.logger)",
        "\nAttaching package: ‘futile.logger’\n\n",
        "The following object is masked from ‘package:mgcv’:\n\n    scat\n\n",
        "> ",
        "library(rstudioapi)",
        "\nAttaching package: ‘rstudioapi’\n\n",
        "The following object is masked from ‘package:R.oo’:\n\n    getVersion\n\n",
        "> ",
        "",
        "> ",
        "library(simEd)",
        "Loading required package: rstream\n",
        "\nAttaching package: ‘simEd’\n\n",
        "The following objects are masked from ‘package:base’:\n\n    sample, set.seed\n\n",
        "> ",
        "library(methods)",
        "> ",
        "",
        "> ",
        "library(doParallel)",
        "Loading required package: iterators\n",
        "Loading required package: parallel\n",
        "> ",
        "library(ipred)",
        "> ",
        "library(e1071)",
        "\nAttaching package: ‘e1071’\n\n",
        "The following object is masked from ‘package:Hmisc’:\n\n    impute\n\n",
        "> ",
        "library(futile.logger)",
        "> ",
        "library(tictoc)",
        "> ",
        "library(stringr)",
        "> ",
        "library(futile.logger)",
        "> ",
        "",
        "> ",
        "library(recipes)",
        "\nAttaching package: ‘recipes’\n\n",
        "The following object is masked from ‘package:devtools’:\n\n    check\n\n",
        "The following object is masked from ‘package:R.oo’:\n\n    check\n\n",
        "The following object is masked from ‘package:Matrix’:\n\n    update\n\n",
        "The following object is masked from ‘package:stringr’:\n\n    fixed\n\n",
        "The following object is masked from ‘package:stats’:\n\n    step\n\n",
        "> ",
        "",
        "> ",
        "############################################ MOST IMPORTANT PACKAGES ####################",
        "> ",
        "############################################                         ####################",
        "> ",
        "library(tidymodels)  #ggplot2,dplyr,tidr,readr,purrr,tibble;j hms,stringr,lubridate,forcats,DBI,haven,httr,",
        "\u001B[30m── \u001B[1mAttaching packages\u001B[22m ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── tidymodels 1.0.0 ──\u001B[39m\n",
        "\u001B[30m\u001B[32m✔\u001B[30m \u001B[34mbroom       \u001B[30m 1.0.0     \u001B[32m✔\u001B[30m \u001B[34mrsample     \u001B[30m 1.0.0\n\u001B[32m✔\u001B[30m \u001B[34mdials       \u001B[30m 1.0.0     \u001B[32m✔\u001B[30m \u001B[34mtune        \u001B[30m 1.0.0\n\u001B[32m✔\u001B[30m \u001B[34minfer       \u001B[30m 1.0.2     \u001B[32m✔\u001B[30m \u001B[34mworkflows   \u001B[30m 1.0.0\n\u001B[32m✔\u001B[30m \u001B[34mmodeldata   \u001B[30m 1.0.0     \u001B[32m✔\u001B[30m \u001B[34mworkflowsets\u001B[30m 1.0.0\n\u001B[32m✔\u001B[30m \u001B[34mparsnip     \u001B[30m 1.0.0     \u001B[32m✔\u001B[30m \u001B[34myardstick   \u001B[30m 1.0.0\u001B[39m\n",
        "\u001B[30m── \u001B[1mConflicts\u001B[22m ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── tidymodels_conflicts() ──\n\u001B[31m✖\u001B[30m \u001B[34mforeach\u001B[30m::\u001B[32maccumulate()\u001B[30m    masks \u001B[34mpurrr\u001B[30m::accumulate()\n\u001B[31m✖\u001B[30m \u001B[34mrecipes\u001B[30m::\u001B[32mcheck()\u001B[30m         masks \u001B[34mdevtools\u001B[30m::check(), \u001B[34mR.oo\u001B[30m::check()\n\u001B[31m✖\u001B[30m \u001B[34mnlme\u001B[30m::\u001B[32mcollapse()\u001B[30m         masks \u001B[34mdplyr\u001B[30m::collapse()\n\u001B[31m✖\u001B[30m \u001B[34mneuralnet\u001B[30m::\u001B[32mcompute()\u001B[30m     masks \u001B[34mdplyr\u001B[30m::compute()\n\u001B[31m✖\u001B[30m \u001B[34mscales\u001B[30m::\u001B[32mdiscard()\u001B[30m        masks \u001B[34mpurrr\u001B[30m::discard()\n\u001B[31m✖\u001B[30m \u001B[34mMatrix\u001B[30m::\u001B[32mexpand()\u001B[30m         masks \u001B[34mtidyr\u001B[30m::expand()\n\u001B[31m✖\u001B[30m \u001B[34mR.utils\u001B[30m::\u001B[32mextract()\u001B[30m       masks \u001B[34mtidyr\u001B[30m::extract(), \u001B[34mmagrittr\u001B[30m::extract()\n\u001B[31m✖\u001B[30m \u001B[34mdplyr\u001B[30m::\u001B[32mfilter()\u001B[30m          masks \u001B[34mstats\u001B[30m::filter()\n\u001B[31m✖\u001B[30m \u001B[34mdials\u001B[30m::\u001B[32mfinalize()\u001B[30m        masks \u001B[34mR.oo\u001B[30m::finalize()\n\u001B[31m✖\u001B[30m \u001B[34mrecipes\u001B[30m::\u001B[32mfixed()\u001B[30m         masks \u001B[34mstringr\u001B[30m::fixed()\n\u001B[31m✖\u001B[30m \u001B[34mrstudioapi\u001B[30m::\u001B[32mgetVersion()\u001B[30m masks \u001B[34mR.oo\u001B[30m::getVersion()\n\u001B[31m✖\u001B[30m \u001B[34mdplyr\u001B[30m::\u001B[32mlag()\u001B[30m             masks \u001B[34mstats\u001B[30m::lag()\n\u001B[31m✖\u001B[30m \u001B[34mparsnip\u001B[30m::\u001B[32mmars()\u001B[30m          masks \u001B[34mmda\u001B[30m::mars()\n\u001B[31m✖\u001B[30m \u001B[34mMatrix\u001B[30m::\u001B[32mpack()\u001B[30m           masks \u001B[34mtidyr\u001B[30m::pack()\n\u001B[31m✖\u001B[30m \u001B[34mrsample\u001B[30m::\u001B[32mpermutations()\u001B[30m  masks \u001B[34me1071\u001B[30m::permutations()\n\u001B[31m✖\u001B[30m \u001B[34mrsample\u001B[30m::\u001B[32mpopulate()\u001B[30m      masks \u001B[34mRcpp\u001B[30m::populate()\n\u001B[31m✖\u001B[30m \u001B[34mdials\u001B[30m::\u001B[32mprune()\u001B[30m           masks \u001B[34mrpart\u001B[30m::prune()\n\u001B[31m✖\u001B[30m \u001B[34mmodeldata\u001B[30m::\u001B[32mscat()\u001B[30m        masks \u001B[34mfutile.logger\u001B[30m::scat(), \u001B[34mmgcv\u001B[30m::scat()\n\u001B[31m✖\u001B[30m \u001B[34mMASS\u001B[30m::\u001B[32mselect()\u001B[30m           masks \u001B[34mdplyr\u001B[30m::select()\n\u001B[31m✖\u001B[30m \u001B[34mpurrr\u001B[30m::\u001B[32mset_names()\u001B[30m       masks \u001B[34mmagrittr\u001B[30m::set_names()\n\u001B[31m✖\u001B[30m \u001B[34myardstick\u001B[30m::\u001B[32mspec()\u001B[30m        masks \u001B[34mreadr\u001B[30m::spec()\n\u001B[31m✖\u001B[30m \u001B[34mHmisc\u001B[30m::\u001B[32msrc()\u001B[30m             masks \u001B[34mdplyr\u001B[30m::src()\n\u001B[31m✖\u001B[30m \u001B[34mrecipes\u001B[30m::\u001B[32mstep()\u001B[30m          masks \u001B[34mstats\u001B[30m::step()\n\u001B[31m✖\u001B[30m \u001B[34mHmisc\u001B[30m::\u001B[32msummarize()\u001B[30m       masks \u001B[34mdplyr\u001B[30m::summarize()\n\u001B[31m✖\u001B[30m \u001B[34mparsnip\u001B[30m::\u001B[32mtranslate()\u001B[30m     masks \u001B[34mHmisc\u001B[30m::translate()\n\u001B[31m✖\u001B[30m \u001B[34mtune\u001B[30m::\u001B[32mtune()\u001B[30m             masks \u001B[34mparsnip\u001B[30m::tune(), \u001B[34me1071\u001B[30m::tune()\n\u001B[31m✖\u001B[30m \u001B[34mMatrix\u001B[30m::\u001B[32munpack()\u001B[30m         masks \u001B[34mtidyr\u001B[30m::unpack()\n\u001B[31m✖\u001B[30m \u001B[34mrecipes\u001B[30m::\u001B[32mupdate()\u001B[30m        masks \u001B[34mMatrix\u001B[30m::update(), \u001B[34mstats\u001B[30m::update()\n\u001B[31m✖\u001B[30m \u001B[34mforeach\u001B[30m::\u001B[32mwhen()\u001B[30m          masks \u001B[34mpurrr\u001B[30m::when()\n\u001B[34m•\u001B[30m Search for functions across packages at \u001B[32mhttps://www.tidymodels.org/find/\u001B[30m\u001B[39m\n",
        "> ",
        "#jsonlite,readxl,rvest,xml2,modelr, broom",
        "> ",
        "library(caret)",
        "\nAttaching package: ‘caret’\n\n",
        "The following objects are masked from ‘package:yardstick’:\n\n    precision, recall, sensitivity, specificity\n\n",
        "The following object is masked from ‘package:survival’:\n\n    cluster\n\n",
        "The following object is masked from ‘package:purrr’:\n\n    lift\n\n",
        "> ",
        "library(earth)",
        "Loading required package: plotmo\n",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "###########################################",
        "> ",
        "###########################################",
        "> ",
        "",
        "> ",
        "projEnv <- new.env()",
        "> ",
        "#traceback()",
        "> ",
        "#browser()",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "rFolder <- paste(codeFolder,\"R/\",sep=\"\")",
        "> ",
        "# Source the relevant files",
        "> ",
        "sourceDirectory(rFolder)",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "setwd(codeFolder)",
        "> ",
        "# Source the relevant files",
        "> ",
        "flog.appender(appender.console(), name=\"FC\")",
        "NULL\n",
        "> ",
        "flog.appender(appender.file(\"C:/Earth/Projects/Mkt01.log\"),name=\"F1\")",
        "NULL\n",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "# Source the relevant files",
        "> ",
        "sourceDirectory(rFolder)",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "source(\"R/Setup_0.R\")",
        "> ",
        "source(\"R/KVEsfr_Utilities.R\")",
        "> ",
        "source(\"R/Stage_1.R\")",
        "> ",
        "#source(\"R/Stage_2.R\")",
        "> ",
        "#source(\"R/Stage_3.R\")",
        "> ",
        "",
        "> ",
        "#source(\"R/misc.R\")",
        "> ",
        "source(\"R/modelInfoEarth.R\")",
        "> ",
        "#source(\"R/createModel.R\")",
        "> ",
        "#source(\"R/workflows.R\")",
        "> ",
        "#source(\"R/createDataPartition.R\")",
        "> ",
        "#source(\"R/train.default.R\")",
        "> ",
        "#source(\"R/trainControl.R\")",
        "> ",
        "#source(\"R/train_recipes.R\")",
        "> ",
        "",
        "> ",
        "#source(\"R/resampleSummary.R\")",
        "> ",
        "#source(\"R/resampleHist.R\")",
        "> ",
        "#source(\"R/resampleWrapper.R\")",
        "> ",
        "#source(\"R/createDataPartition.R\")",
        "> ",
        "",
        "> ",
        "#source(\"R/createResample.R\")",
        "> ",
        "#source(\"R/resamples.R\")",
        "> ",
        "#source(\"R/earth.fit.R\")",
        "> ",
        "#source(\"R/earth.R\")",
        "> ",
        "",
        "> ",
        "#source(\"R/modelInfoGbm.R\")",
        "> ",
        "gctorture(FALSE)",
        "> ",
        "#set.seed(9843217)",
        "> ",
        "#set.seed(98714217)",
        "> ",
        "#set.seed(247943217)    ",
        "> ",
        "set.seed(249334217)",
        "> ",
        "#et.seed(32134217)",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "# function(projEnv,",
        "> ",
        "#          codeFolder,",
        "> ",
        "#          projectParentFolder,",
        "> ",
        "#          projectID,",
        "> ",
        "#          mlsData,",
        "> ",
        "#          mlsSheet,",
        "> ",
        "#          targetVariable,",
        "> ",
        "#          bootstrap,",
        "> ",
        "#          pmethod,",
        "> ",
        "#          maxterms,",
        "> ",
        "#          nprune,",
        "> ",
        "#          minspan,",
        "> ",
        "#          endspan,",
        "> ",
        "#          degree,",
        "> ",
        "#          subjectCQA) ",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "SetUp_0(projEnv,",
        "+ ",
        "        \"C:/Order_1/RPackages/Mkt01/\",",
        "+ ",
        "        \"C:/Order_1/Market/\",",
        "+ ",
        "        \"M01\",",
        "+ ",
        "        \"Appraisal_2\",",
        "+ ",
        "        \"MLSData\",",
        "+ ",
        "        ",
        "+ ",
        "        \"SalePrice\",",
        "+ ",
        "        40,",
        "+ ",
        "        \"backward\",",
        "+ ",
        "        100,",
        "+ ",
        "        4:14,",
        "+ ",
        "        3,",
        "+ ",
        "        3,",
        "+ ",
        "        1,",
        "+ ",
        "        5.0)",
        "[1] \"SetUpProjectEnvironment\"\n[1] \"ProjectParentFolder:  C:/Order_1/Market/\"\n[1] \"MlsVersionFolder:  C:/Order_1/Market/M01/Earth/Mls/CQA5D1_20220901_013821/\"\n[1] \"created\"\n[1] \"DBFile:  C:/Order_1/Market/M01/Earth/DB/M01DB.sqlite\"\n[1] \"K1\"\n[1] \"K2\"\n[1] \"K3\"\n[1] \"K4\"\n[1] \"LoadMlsExcelToDataFrame\"\n[1] \"MLSData File:  C:/Order_1/Market/M01/Earth/Mls/Appraisal_2.xlsx   MLSData\"\n[1] \"LoadMappingsExcelToDataFrame\"\n[1] \"Load Project\"\n[1] \"#1 projEnv$EffDate:  2022-08-22  projEnv$ProjectDF$EffDate:  \"\n[1] \"Load OneWayAggregation\"",
        "\n[1] \"Load InteractionAggregation\"\n[1] \"Load URARMapping\"\n[1] \"Load AllowedInteractions\"\n[1] \"Load MlsMapping\"\n[1] \"Load HelpFields\"\n[1] \"Load FieldsRecalculated\"\n[1] \"Load FieldsCalcStage1DF\"\n[1] \"Load FieldsCalcStage2DF\"\n[1] \"Load RegressionFields\"\n[1] \"MlsMappingDF.OriginalMLSFieldName [ 22 ] is missing in MlsDataDF  StreetAddress (Full)\"\n[1] \"MlsMappingDF.OriginalMLSFieldName [ 26 ] is missing in MlsDataDF  DaysOffMkt\"\n[1] \"Processing aborted due to errors.\"\n[1] \"Run aborted\"\n[1] \"T1 xxxxxxxxxxxxxxxxxxxxxxxx\"",
        "\n[1] \"Compress MlsDataDF\"\n[1] \"nc:  75\"\n[1] \"Compress ProjectDF\"\n[1] \"nc:  2\"\n[1] \"Compress OneWayAggregationDF\"\n[1] \"nc:  2\"\n[1] \"Compress InteractionAggregationDF\"\n[1] \"nc:  15\"\n[1] \"Compress AllowedInteractionsDF\"\n[1] \"nc:  15\"\n[1] \"Compress MlsMappingDF\"\n[1] \"nc:  4\"\n[1] \"Compress ProjectDF\"\n[1] \"nc:  2\"\n[1] \"Compress FieldsRecalculated\"\n[1] \"nc:  0\"\n[1] \"Compress FieldsCalcStage1\"\n[1] \"nc:  0\"\n[1] \"Compress FieldsCalcStage2\"\n[1] \"nc:  0\"\n[1] \"Compress HelpFields\"\n[1] \"nc:  0\"\n[1] \"Compress RegressionFields\"",
        "\n[1] \"nc:  0\"\n[1] \"Finished compression\"\n<environment: 0x000002d6a318b518>\n[1] \"Finished compressionA\"\n[1] \"T2\"\n[1] \"ConvertDatesToChar MlsDataDF\"\n[1] \"ConvertDatesToChar\"\n[1] \"i/t[i]:  8 Date\"\n  [1] \"08/09/2022\" \"08/05/2022\" \"07/25/2022\" \"07/23/2022\" \"07/22/2022\" \"07/21/2022\" \"07/19/2022\" \"07/19/2022\" \"07/15/2022\" \"07/15/2022\" \"07/15/2022\" \"07/15/2022\" \"07/14/2022\" \"07/14/2022\"\n [15] \"07/11/2022\" \"07/11/2022\" \"07/11/2022\" \"07/08/2022\" \"07/06/2022\" \"07/06/2022\" \"07/04/2022\" \"07/01/2022\" \"07/01/2022\" \"06/30/2022\"",
        " \"06/30/2022\" \"06/28/2022\" \"06/27/2022\" \"06/22/2022\"\n [29] \"06/17/2022\" \"06/14/2022\" \"06/06/2022\" \"06/03/2022\" \"06/03/2022\" \"06/02/2022\" \"05/31/2022\" \"05/29/2022\" \"05/27/2022\" \"05/26/2022\" \"05/25/2022\" \"05/25/2022\" \"05/24/2022\" \"05/23/2022\"\n [43] \"05/21/2022\" \"05/19/2022\" \"05/18/2022\" \"05/16/2022\" \"05/15/2022\" \"05/13/2022\" \"05/12/2022\" \"05/12/2022\" \"05/11/2022\" \"05/10/2022\" \"05/09/2022\" \"05/07/2022\" \"05/07/2022\" \"05/07/2022\"\n [57] \"05/04/2022\" \"05/04/2022\" \"05/03/2022\" \"04/29/2022\" \"04/28/2022\" \"04/26/2022\"",
        " \"04/26/2022\" \"04/25/2022\" \"04/25/2022\" \"04/22/2022\" \"04/21/2022\" \"04/19/2022\" \"04/18/2022\" \"04/15/2022\"\n [71] \"04/15/2022\" \"04/14/2022\" \"04/13/2022\" \"04/12/2022\" \"04/11/2022\" \"04/10/2022\" \"04/07/2022\" \"04/07/2022\" \"04/05/2022\" \"04/04/2022\" \"03/31/2022\" \"03/31/2022\" \"03/31/2022\" \"03/30/2022\"\n [85] \"03/29/2022\" \"03/24/2022\" \"03/22/2022\" \"03/22/2022\" \"03/21/2022\" \"03/21/2022\" \"03/20/2022\" \"03/18/2022\" \"03/17/2022\" \"03/16/2022\" \"03/16/2022\" \"03/16/2022\" \"03/16/2022\" \"03/15/2022\"\n [99] \"03/11/2022\" \"03/11/2022\"",
        " \"03/10/2022\" \"03/10/2022\" \"03/09/2022\" \"03/09/2022\" \"03/05/2022\" \"03/04/2022\" \"03/03/2022\" \"03/02/2022\" \"03/02/2022\" \"03/01/2022\" \"03/01/2022\" \"03/01/2022\"\n[113] \"02/28/2022\" \"02/28/2022\" \"02/26/2022\" \"02/25/2022\" \"02/24/2022\" \"02/23/2022\" \"02/22/2022\" \"02/22/2022\" \"02/22/2022\" \"02/18/2022\" \"02/17/2022\" \"02/16/2022\" \"02/16/2022\" \"02/15/2022\"\n[127] \"02/12/2022\" \"02/11/2022\" \"02/11/2022\" \"02/11/2022\" \"02/10/2022\" \"02/09/2022\" \"02/09/2022\" \"02/08/2022\" \"02/07/2022\" \"02/05/2022\" \"02/02/2022\" \"02/02/2022\" \"02/01/2022\"",
        " \"01/29/2022\"\n[141] \"01/28/2022\" \"01/27/2022\" \"01/27/2022\" \"01/26/2022\" \"01/25/2022\" \"01/21/2022\" \"01/20/2022\" \"01/19/2022\" \"01/19/2022\" \"01/19/2022\" \"01/18/2022\" \"01/17/2022\" \"01/13/2022\" \"01/13/2022\"\n[155] \"01/12/2022\" \"01/11/2022\" \"01/06/2022\" \"12/31/2021\" \"12/29/2021\" \"12/28/2021\" \"12/22/2021\" \"12/21/2021\" \"12/17/2021\" \"12/16/2021\" \"12/15/2021\" \"12/15/2021\" \"12/10/2021\" \"12/09/2021\"\n[169] \"12/08/2021\" \"12/07/2021\" \"12/07/2021\" \"12/06/2021\" \"12/03/2021\" \"12/03/2021\" \"12/03/2021\" \"12/02/2021\" \"12/01/2021\"",
        " \"11/29/2021\" \"11/29/2021\" \"11/26/2021\" \"11/23/2021\" \"11/23/2021\"\n[183] \"11/20/2021\" \"11/20/2021\" \"11/18/2021\" \"11/18/2021\" \"11/18/2021\" \"11/17/2021\" \"11/17/2021\" \"11/17/2021\" \"11/17/2021\" \"11/17/2021\" \"11/16/2021\" \"11/13/2021\" \"11/11/2021\" \"11/11/2021\"\n[197] \"11/10/2021\" \"11/10/2021\" \"11/09/2021\" \"11/08/2021\" \"11/07/2021\" \"11/05/2021\" \"11/05/2021\" \"11/05/2021\" \"11/03/2021\" \"11/03/2021\" \"11/03/2021\" \"11/03/2021\" \"11/01/2021\" \"11/01/2021\"\n[211] \"10/27/2021\" \"10/26/2021\" \"10/25/2021\" \"10/23/2021\" \"10/21/2021\"",
        " \"10/20/2021\" \"10/18/2021\" \"10/15/2021\" \"10/13/2021\" \"10/13/2021\" \"10/13/2021\" \"10/13/2021\" \"10/12/2021\" \"10/12/2021\"\n[225] \"10/12/2021\" \"10/07/2021\" \"10/06/2021\" \"10/06/2021\" \"10/02/2021\" \"10/02/2021\" \"10/01/2021\" \"09/29/2021\" \"09/29/2021\" \"09/29/2021\" \"09/28/2021\" \"09/27/2021\" \"09/27/2021\" \"09/25/2021\"\n[239] \"09/24/2021\" \"09/24/2021\" \"09/23/2021\" \"09/22/2021\" \"09/17/2021\" \"09/15/2021\" \"09/15/2021\" \"09/13/2021\" \"09/10/2021\" \"09/09/2021\" \"09/09/2021\" \"09/03/2021\" \"09/02/2021\" \"09/01/2021\"\n[253] \"08/31/2021\"",
        " \"08/25/2021\" \"08/24/2021\" \"08/22/2021\" \"08/20/2021\" \"08/20/2021\" \"08/19/2021\"\n[1] \"i/t[i]:  9 Date\"\n  [1] \"08/17/2022\" \"08/05/2022\" \"08/17/2022\" \"08/22/2022\" \"08/16/2022\" \"07/28/2022\" \"08/19/2022\" \"08/12/2022\" \"08/05/2022\" \"07/22/2022\" \"08/04/2022\" \"08/05/2022\" \"08/03/2022\" \"08/09/2022\"\n [15] \"07/27/2022\" \"08/10/2022\" \"08/04/2022\" \"08/04/2022\" \"08/11/2022\" \"08/12/2022\" \"07/28/2022\" \"07/26/2022\" \"07/01/2022\" \"07/29/2022\" \"07/27/2022\" \"07/21/2022\" \"07/29/2022\" \"07/08/2022\"\n [29] \"07/22/2022\" \"07/21/2022\" \"07/05/2022\"",
        " \"06/27/2022\" \"06/15/2022\" \"06/29/2022\" \"06/27/2022\" \"07/01/2022\" \"06/27/2022\" \"06/27/2022\" \"06/15/2022\" \"06/13/2022\" \"06/17/2022\" \"06/21/2022\"\n [43] \"06/15/2022\" \"06/22/2022\" \"06/07/2022\" \"06/14/2022\" \"06/28/2022\" \"06/01/2022\" \"05/20/2022\" \"05/31/2022\" \"05/31/2022\" \"06/10/2022\" \"06/03/2022\" \"06/03/2022\" \"06/07/2022\" \"06/01/2022\"\n [57] \"05/25/2022\" \"05/25/2022\" \"05/25/2022\" \"05/24/2022\" \"05/25/2022\" \"06/02/2022\" \"06/06/2022\" \"05/24/2022\" \"05/31/2022\" \"05/18/2022\" \"05/23/2022\" \"05/17/2022\" \"05/20/2022\" \"05/09/2022\"",
        "\n [71] \"05/20/2022\" \"05/05/2022\" \"05/12/2022\" \"04/29/2022\" \"05/06/2022\" \"05/03/2022\" \"05/10/2022\" \"05/16/2022\" \"04/23/2022\" \"04/29/2022\" \"04/22/2022\" \"04/28/2022\" \"04/21/2022\" \"05/03/2022\"\n [85] \"04/22/2022\" \"04/06/2022\" \"04/19/2022\" \"03/22/2022\" \"04/11/2022\" \"04/12/2022\" \"05/09/2022\" \"04/18/2022\" \"03/31/2022\" \"05/31/2022\" \"04/07/2022\" \"03/23/2022\" \"04/13/2022\" \"04/05/2022\"\n [99] \"04/08/2022\" \"04/11/2022\" \"05/11/2022\" \"04/06/2022\" \"03/29/2022\" \"04/04/2022\" \"04/04/2022\" \"03/22/2022\" \"04/04/2022\" \"04/05/2022\"",
        " \"03/23/2022\" \"03/18/2022\" \"03/14/2022\" \"03/24/2022\"\n[113] \"03/29/2022\" \"03/18/2022\" \"03/25/2022\" \"03/28/2022\" \"03/16/2022\" \"03/22/2022\" \"03/22/2022\" \"03/22/2022\" \"03/21/2022\" \"02/28/2022\" \"03/24/2022\" \"03/17/2022\" \"03/18/2022\" \"03/17/2022\"\n[127] \"02/12/2022\" \"03/09/2022\" \"03/08/2022\" \"03/28/2022\" \"03/09/2022\" \"03/08/2022\" \"03/01/2022\" \"03/02/2022\" \"03/11/2022\" \"03/02/2022\" \"03/03/2022\" \"02/28/2022\" \"03/11/2022\" \"02/10/2022\"\n[141] \"02/25/2022\" \"03/04/2022\" \"03/01/2022\" \"02/28/2022\" \"02/22/2022\" \"02/15/2022\"",
        " \"01/20/2022\" \"02/08/2022\" \"02/24/2022\" \"02/04/2022\" \"02/14/2022\" \"02/16/2022\" \"02/11/2022\" \"02/16/2022\"\n[155] \"02/15/2022\" \"02/01/2022\" \"01/27/2022\" \"01/27/2022\" \"01/05/2022\" \"02/07/2022\" \"01/20/2022\" \"04/15/2022\" \"01/14/2022\" \"01/14/2022\" \"02/18/2022\" \"01/18/2022\" \"01/12/2022\" \"01/10/2022\"\n[169] \"01/14/2022\" \"01/19/2022\" \"12/23/2021\" \"12/17/2021\" \"01/03/2022\" \"12/30/2021\" \"01/14/2022\" \"12/21/2021\" \"01/05/2022\" \"01/06/2022\" \"12/23/2021\" \"12/31/2021\" \"12/10/2021\" \"12/17/2021\"\n[183] \"12/15/2021\" \"12/21/2021\"",
        " \"12/10/2021\" \"12/10/2021\" \"12/30/2021\" \"12/21/2021\" \"12/08/2021\" \"12/23/2021\" \"12/09/2021\" \"12/29/2021\" \"12/17/2021\" \"12/15/2021\" \"11/30/2021\" \"11/30/2021\"\n[197] \"12/06/2021\" \"12/10/2021\" \"12/08/2021\" \"12/07/2021\" \"12/09/2021\" \"12/03/2021\" \"11/24/2021\" \"12/15/2021\" \"12/06/2021\" \"11/03/2021\" \"12/03/2021\" \"11/30/2021\" \"12/08/2021\" \"11/30/2021\"\n[211] \"11/05/2021\" \"11/05/2021\" \"11/01/2021\" \"11/24/2021\" \"10/28/2021\" \"11/19/2021\" \"11/10/2021\" \"11/11/2021\" \"11/06/2021\" \"11/03/2021\" \"10/25/2021\" \"11/08/2021\" \"11/12/2021\"",
        " \"10/22/2021\"\n[225] \"10/25/2021\" \"10/08/2021\" \"11/18/2021\" \"10/28/2021\" \"11/16/2021\" \"11/15/2021\" \"10/22/2021\" \"10/08/2021\" \"11/04/2021\" \"10/22/2021\" \"10/25/2021\" \"12/07/2021\" \"11/22/2021\" \"10/18/2021\"\n[239] \"10/26/2021\" \"10/21/2021\" \"10/25/2021\" \"10/15/2021\" \"10/21/2021\" \"10/19/2021\" \"10/15/2021\" \"09/24/2021\" \"10/01/2021\" \"10/07/2021\" \"10/13/2021\" \"09/28/2021\" \"09/14/2021\" \"11/30/2021\"\n[253] \"10/01/2021\" \"09/08/2021\" \"09/07/2021\" \"09/27/2021\" \"09/01/2021\" \"09/30/2021\" \"09/20/2021\"\n[1] \"i/t[i]:  30 Date\"\n  [1]",
        " \"07/12/2022\" \"08/05/2022\" \"06/16/2022\" \"06/30/2022\" \"07/08/2022\" \"07/14/2022\" \"07/13/2022\" \"07/01/2022\" \"06/11/2022\" \"05/06/2022\" \"06/03/2022\" \"07/10/2022\" \"06/24/2022\" \"07/07/2022\"\n [15] \"06/15/2022\" \"07/05/2022\" \"06/11/2022\" \"06/02/2022\" \"06/10/2022\" \"07/06/2022\" \"05/15/2022\" \"06/13/2022\" \"04/26/2022\" \"06/23/2022\" \"06/07/2022\" \"06/24/2022\" \"06/23/2022\" \"06/14/2022\"\n [29] \"06/03/2022\" \"05/25/2022\" \"05/11/2022\" \"05/27/2022\" \"05/25/2022\" \"05/14/2022\" \"04/28/2022\" \"05/22/2022\" \"05/19/2022\" \"05/19/2022\" \"05/06/2022\"",
        " \"05/19/2022\" \"05/19/2022\" \"04/22/2022\"\n [43] \"05/13/2022\" \"05/13/2022\" \"05/11/2022\" \"04/21/2022\" \"05/12/2022\" \"05/05/2022\" \"05/05/2022\" \"05/06/2022\" \"05/06/2022\" \"04/28/2022\" \"04/28/2022\" \"04/22/2022\" \"05/05/2022\" \"04/29/2022\"\n [57] \"04/28/2022\" \"04/29/2022\" \"04/22/2022\" \"04/20/2022\" \"04/25/2022\" \"04/21/2022\" \"04/21/2022\" \"04/22/2022\" \"04/03/2022\" \"04/13/2022\" \"04/14/2022\" \"03/05/2022\" \"03/11/2022\" \"04/08/2022\"\n [71] \"04/07/2022\" \"03/31/2022\" \"02/17/2022\" \"03/31/2022\" \"03/25/2022\" \"03/31/2022\" \"03/25/2022\"",
        " \"03/30/2022\" \"03/24/2022\" \"02/26/2022\" \"03/24/2022\" \"03/25/2022\" \"03/18/2022\" \"03/17/2022\"\n [85] \"03/17/2022\" \"02/04/2022\" \"03/18/2022\" \"03/22/2022\" \"03/10/2022\" \"03/21/2022\" \"02/17/2022\" \"02/02/2022\" \"03/16/2022\" \"02/10/2022\" \"03/07/2022\" \"03/10/2022\" \"03/03/2022\" \"03/03/2022\"\n [99] \"02/26/2022\" \"03/03/2022\" \"03/10/2022\" \"03/01/2022\" \"02/28/2022\" \"03/04/2022\" \"01/20/2022\" \"02/21/2022\" \"02/22/2022\" \"02/24/2022\" \"02/22/2022\" \"02/25/2022\" \"02/28/2022\" \"02/19/2022\"\n[113] \"02/24/2022\" \"01/30/2022\" \"02/18/2022\"",
        " \"02/18/2022\" \"02/11/2022\" \"02/15/2022\" \"02/10/2022\" \"02/08/2022\" \"02/09/2022\" \"02/07/2022\" \"02/16/2022\" \"02/10/2022\" \"02/10/2022\" \"02/03/2022\"\n[127] \"02/12/2022\" \"01/27/2022\" \"02/03/2022\" \"12/31/2021\" \"01/28/2022\" \"01/27/2022\" \"01/27/2022\" \"02/03/2022\" \"01/27/2022\" \"01/28/2022\" \"01/21/2022\" \"01/20/2022\" \"01/24/2022\" \"01/27/2022\"\n[141] \"01/21/2022\" \"01/20/2022\" \"01/20/2022\" \"01/14/2022\" \"01/12/2022\" \"01/15/2022\" \"01/20/2022\" \"01/13/2022\" \"01/11/2022\" \"01/14/2022\" \"01/17/2022\" \"12/21/2021\" \"01/06/2022\" \"01/06/2022\"",
        "\n[155] \"01/06/2022\" \"01/04/2022\" \"12/30/2021\" \"12/18/2021\" \"11/19/2021\" \"09/15/2021\" \"12/03/2021\" \"12/09/2021\" \"12/10/2021\" \"12/08/2021\" \"12/03/2021\" \"12/08/2021\" \"11/29/2021\" \"11/29/2021\"\n[169] \"12/06/2021\" \"11/30/2021\" \"11/20/2021\" \"11/03/2021\" \"11/26/2021\" \"11/18/2021\" \"11/19/2021\" \"11/15/2021\" \"11/18/2021\" \"11/19/2021\" \"11/12/2021\" \"11/19/2021\" \"11/12/2021\" \"11/12/2021\"\n[183] \"11/12/2021\" \"09/08/2021\" \"11/04/2021\" \"11/04/2021\" \"10/19/2021\" \"11/04/2021\" \"11/12/2021\" \"11/05/2021\" \"11/05/2021\" \"11/09/2021\"",
        " \"11/04/2021\" \"11/02/2021\" \"08/12/2021\" \"10/29/2021\"\n[197] \"10/28/2021\" \"10/29/2021\" \"11/03/2021\" \"11/05/2021\" \"10/29/2021\" \"11/01/2021\" \"10/28/2021\" \"10/12/2021\" \"10/21/2021\" \"11/03/2021\" \"10/28/2021\" \"09/25/2021\" \"09/10/2021\" \"10/12/2021\"\n[211] \"10/14/2021\" \"08/27/2021\" \"10/12/2021\" \"08/24/2021\" \"09/28/2021\" \"10/07/2021\" \"10/08/2021\" \"08/11/2021\" \"09/30/2021\" \"10/01/2021\" \"10/07/2021\" \"10/01/2021\" \"10/01/2021\" \"10/01/2021\"\n[225] \"07/10/2021\" \"08/20/2021\" \"09/27/2021\" \"09/02/2021\" \"09/18/2021\" \"09/28/2021\"",
        " \"09/10/2021\" \"09/07/2021\" \"09/20/2021\" \"09/17/2021\" \"09/18/2021\" \"08/25/2021\" \"08/20/2021\" \"09/24/2021\"\n[239] \"09/16/2021\" \"09/03/2021\" \"09/17/2021\" \"09/21/2021\" \"09/10/2021\" \"09/02/2021\" \"08/15/2021\" \"09/01/2021\" \"08/27/2021\" \"06/17/2021\" \"09/09/2021\" \"08/19/2021\" \"08/27/2021\" \"07/14/2021\"\n[253] \"08/18/2021\" \"08/20/2021\" \"08/12/2021\" \"08/06/2021\" \"08/20/2021\" \"08/20/2021\" \"08/12/2021\"\n[1] \"ConvertDatesToChar ProjectDF\"\n[1] \"ConvertDatesToChar\"\n[1] \"ConvertDatesToChar OneWayAggregationDF\"\n[1] \"ConvertDatesToChar\"",
        "\n[1] \"ConvertDatesToChar InteractionAggregationDF\"\n[1] \"ConvertDatesToChar\"\n[1] \"ConvertDatesToChar URARMlsMappingDF\"\n[1] \"ConvertDatesToChar AllowedInteractionsDF\"\n[1] \"ConvertDatesToChar\"\n[1] \"ConvertDatesToChar MlsMappingDF\"\n[1] \"ConvertDatesToChar\"\n[1] \"T4\"\n[1] \"WriteMlsDfToSqlite\"\n[1] \"WriteMlsDfToSqlite\"\n[1] \"A1\"\n[1] \"A2\"\n[1] \"A3\"\n[1] \"A4\"\n[1] \"WriteMlsDfToSqlite\"\n[1] \"Add Fields \"\n[1] \"Rename Fields\"\n[1] \" plyr::rename(projEnv$MlsDataDF, replace = c(  \\\"Age\\\"=\\\"Age\\\",\\\"BathsTotal\\\"=\\\"Baths\\\",\\\"BedsTotal\\\"=\\\"Beds\\\",\\\"GarageSpaces\\\"=\\\"Garage\\\",\\\"MLSNumber\\\"=\\\"MlsNbr\\\",\\\"NbrofFireplaces\\\"=\\\"FrPlcNbr\\\",\\\"ParcelNumber\\\"=\\\"ParcelNbr\\\",\\\"PoolYN\\\"=\\\"PoolYN\\\",\\\"SalePrice\\\"=\\\"SalePrice\\\",\\\"SqFtTotal\\\"=\\\"GLA\\\",\\\"StreetAddressFull\\\"=\\\"Address\\\",\\\"ZipCode\\\"=\\\"Zip\\\",\\\"AreaNbr\\\"=\\\"AreaNbr\\\",\\\"NoOfStories\\\"=\\\"Story\\\",\\\"DaysOffMkt\\\"=\\\"DaysOffMkt\\\"))\"",
        "\n[1] \"XXXXXXXXXXX\"\n[1] \"yyyyyyyyy\"\n[1] \"Convert DF Fields Bool To Binary\"\n[1] \"Compress MlsDataDF\"\n[1] \"nc:  80\"\n[1] \"Compress ProjectDF\"\n[1] \"nc:  2\"\n[1] \"Compress OneWayAggregationDF\"\n[1] \"nc:  2\"\n[1] \"Compress InteractionAggregationDF\"\n[1] \"nc:  15\"\n[1] \"Compress AllowedInteractionsDF\"\n[1] \"nc:  15\"\n[1] \"Compress MlsMappingDF\"\n[1] \"nc:  4\"\n[1] \"Compress ProjectDF\"\n[1] \"nc:  2\"\n[1] \"Compress FieldsRecalculated\"\n[1] \"nc:  0\"\n[1] \"Compress FieldsCalcStage1\"\n[1] \"nc:  0\"\n[1] \"Compress FieldsCalcStage2\"\n[1] \"nc:  0\"",
        "\n[1] \"Compress HelpFields\"\n[1] \"nc:  0\"\n[1] \"Compress RegressionFields\"\n[1] \"nc:  0\"\n[1] \"Finished compression\"\n<environment: 0x000002d6a318b518>\n[1] \"Finished compressionA\"\n",
        "> ",
        "",
        "> ",
        "flog.info( \"Stage I\",name=\"F1\")",
        "> ",
        "Stage_1(projEnv)",
        "[1] \"###################   STAGE I   ######################\"\n[1] \"A x\"\n[1] \"B .\"\n[1] \"A x\"\n[1] \"B x\"\n[1] \"C  x\"\n[1] \"A x\"\n[1] \"B .\"\n[1] \"A x\"\n[1] \"B .\"\n[1] \"A x\"\n[1] \"B .\"\n[1] \"A x\"\n[1] \"B .\"\n[1] \"A x\"\n[1] \"B .\"\n[1] \"A x\"\n[1] \"B .\"\n[1] \"A x\"\n[1] \"B .\"\n[1] \"A x\"\n[1] \"B .\"\n[1] \"A x\"\n[1] \"B .\"\n[1] \"A x\"\n[1] \"B .\"\n[1] \"A x\"\n[1] \"B .\"\n[1] \"Returned interaction table: \"\n                       1       2     3    4          5        7      8   9       10        11      12     13    14\nAAARegressionFeature Age AreaNbr",
        " Baths Beds DaysOffMkt FrPlcNbr Garage GLA Latitude Longitude LotSize PoolYN Story\nAge                    .       x     x    x          x        .      x   x        x         x       x      x     x\nAreaNbr                x       .     x    x          x        .      x   x        x         x       x      x     x\nBaths                  x       x     .    x          x        .      x   x        x         x       x      x     x\nBeds                   x       x     x    .          x        .      x   x        x         x",
        "       x      x     x\nDaysOffMkt             x       x     x    x          .        .      x   x        x         x       x      x     x\nFrPlcNbr               .       .     .    .          .        .      x   x        x         x       x      x     x\nGarage                 x       x     x    x          x        x      .   x        x         x       x      x     x\nGLA                    x       x     x    x          x        x      x   .        x         x       x      x     x\nLatitude               x       x",
        "     x    x          x        x      x   x        .         x       x      x     x\nLongitude              x       x     x    x          x        x      x   x        x         .       x      x     x\nLotSize                x       x     x    x          x        x      x   x        x         x       .      x     x\nPoolYN                 x       x     x    x          x        x      x   x        x         x       x      .     x\nStory                  x       x     x    x          x        x      x   x        x         x",
        "       x      x     .\n [1] \"Comp\"                            \"MlsNbr\"                          \"ParcelNbr\"                       \"Address\"                         \"SaleConcessCredit\"              \n [6] \"SaleConcessCreditYN\"             \"SalePrice\"                       \"SaleDate\"                        \"CloseDate\"                       \"GLA\"                            \n[11] \"LotSize\"                         \"Age\"                             \"Baths\"                           \"DOM\"                            ",
        " \"BathsFull\"                      \n[16] \"BathsHalf\"                       \"Beds\"                            \"Garage\"                          \"Story\"                           \"ParkingSpaces\"                  \n[21] \"FrPlcNbr\"                        \"PoolYN\"                          \"AreaNbr\"                         \"AreaName\"                        \"Longitude\"                      \n[26] \"Latitude\"                        \"Longitude6\"                      \"Latitude6\"                       \"View\"                           ",
        " \"ListingDate\"                    \n[31] \"FireplaceYN\"                     \"Fireplaces\"                      \"Pool\"                            \"NoOfUnits\"                       \"Stories\"                        \n[36] \"SecondUnitDesc\"                  \"Style\"                           \"Kitchen\"                         \"Bathroom\"                        \"PropertyType\"                   \n[41] \"CarportMin\"                      \"Bedrooms\"                        \"Zoning\"                          \"YardSqFt\"                       ",
        " \"HOAFee\"                         \n[46] \"HOAExistYN\"                      \"ListPrice\"                       \"PropertySubType\"                 \"Status\"                          \"ConstructionStatus\"             \n[51] \"County\"                          \"DisclosuresURL\"                  \"Acres\"                           \"GreenRatedYN\"                    \"GreenRating\"                    \n[56] \"GrossRentMultiplier\"             \"CapitalizationRate\"              \"LotSizeSqFtTax\"                  \"StreetName\"                     ",
        " \"StreetNumber\"                   \n[61] \"Water\"                           \"YearBuilt\"                       \"Zip\"                             \"SoldRemarks\"                     \"BrandedDroneTour\"               \n[66] \"ExistingStructures\"              \"PropertyCondition\"               \"PostalCity\"                      \"PostalCodePlus4\"                 \"TotalSqFt\"                      \n[71] \"StructureSqFtTax\"                \"SecondaryLivingSpaceSqFt\"        \"SecondaryLivingSpaceDescription\" \"SubdivisionText\"                ",
        " \"BuilderName\"                    \n[76] \"DaysOffMkt\"                      \"DaysOffMkt_K\"                    \"Estimate\"                        \"Residual\"                        \"CQA\"                            \n[1] \"####### CALLING R/earth.  This may take some time, depending on how fast your computers is and how large the MLS file. \"\n[1] \"T1\"\n[1] \"T2\"\n[1] \"T3: projEnv$MlsDataDF$AreaNbr <- factor(projEnv$MlsDataDF$AreaNbr, levels=sort(unique(projEnv$MlsDataDF$AreaNbr)))\"\n[1] \"T4\"\n[1] \"Earth Target:  SalePrice  ~  Age + AreaNbr + Baths + Beds + DaysOffMkt + FrPlcNbr + Garage + GLA + Latitude + Longitude + LotSize + PoolYN + Story\"",
        "\n[1] \"LinPreds:  Age$\"\nINFO [2022-09-01 01:38:23] Earth Target: SalePrice  ~  Age + AreaNbr + Baths + Beds + DaysOffMkt + FrPlcNbr + Garage + GLA + Latitude + Longitude + LotSize + PoolYN + Story\n\nRestarting R session...\n\n"
    ]
}