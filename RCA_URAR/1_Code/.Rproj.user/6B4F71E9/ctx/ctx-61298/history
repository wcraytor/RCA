library(tidymodels)  #ggplot2,dplyr,tidr,readr,purrr,tibble;j hms,stringr,lubridate,forcats,DBI,haven,httr,
#jsonlite,readxl,rvest,xml2,modelr, broom
library(caret)
library(earth)
###########################################
###########################################
projEnv <- new.env()
#traceback()
#browser()
codeFolder <- "C:/Order_1/RPackages/Mkt01/";
rFolder <- paste(codeFolder,"R/",sep="")
# Source the relevant files
sourceDirectory(rFolder)
cppFilePath <- paste(codeFolder,"src/CqaMap.cpp",sep="")
setwd(codeFolder)
# Source the relevant files
flog.appender(appender.console(), name="FC")
flog.appender(appender.file("C:/Earth/Projects/Mkt01.log"),name="F1")
#sourceCpp(cppFilePath)
# Source the relevant files
sourceDirectory(rFolder)
source("R/Setup_0.R")
source("R/KVEsfr_Utilities.R")
source("R/Stage_1.R")
#source("R/Stage_2.R")
#source("R/Stage_3.R")
source("R/misc.R")
source("R/modelInfoEarth.R")
source("R/createModel.R")
source("R/workflows.R")
source("R/createDataPartition.R")
source("R/train.default.R")
source("R/trainControl.R")
source("R/train_recipes.R")
source("R/resampleSummary.R")
source("R/resampleHist.R")
source("R/resampleWrapper.R")
source("R/createDataPartition.R")
source("R/createResample.R")
source("R/resamples.R")
source("R/earth.fit.R")
source("R/earth.R")
#source("R/modelInfoGbm.R")
gctorture(FALSE)
#set.seed(9843217)
#set.seed(98714217)
#set.seed(247943217)
set.seed(249334217)
#et.seed(32134217)
# function(projEnv,
#          codeFolder,
#          projectParentFolder,
#          projectID,
#          mlsData,
#          mlsSheet,
#          targetVariable,
#          bootstrap,
#          pmethod,
#          maxterms,
#          nprune,
#          minspan,
#          endspan,
#          degree,
#          subjectCQA)
SetUp_0(projEnv,
"C:/Order_1/RPackages/Mkt01/",
"C:/Order_1/Market/",
"M01",
"Appraisal_2",
"MLSData",
"SalePrice",
40,
"backward",
80,
6,
3,
3,
2,
5.0)
flog.info( "Stage I",name="F1")
Stage_1(projEnv)
REQUIRE_NAMESPACE_QUIET_STOP <<- ""
SSCount <<- 0
SStateP <<- 0
tic("Start Time")
set.seed(123)
seeds <- vector(mode = "list", length = 41)
for(i in 1:41) seeds[[i]] <- sample.int(1000, 41)
tC <- trainControl(method="repeatedcv",number=10,  repeats=2,  savePredictions=TRUE, p=.80, returnData=TRUE, seeds = seeds )
marsGrid <- expand.grid(  .nprune =   8:12 ,
.degree =  1 ,
.minspan =  c(5,8,10,12) ,
.endspan =  4:5
)
c1 <- makeCluster(no_cores,type="SOCK", outfile = "debug.txt")
registerDoParallel(c1)
# Call earth
targetVars <-  projEnv$MlsDataDF[[targetName]]
out <-    train( x = projEnv$MlsDataDF[cnames],
y = xx[],
trControl=  tC,
tuneGrid=marsGrid,
method=modelInfo ,
# method="earth",
metric="RMSE",
pmethod = projEnv$Pmethod  ,
nk = projEnv$Maxterms,
nfold = 10,
ncross = 40,
keepxy = TRUE,
Auto.linpreds = TRUE,
penalty = -1,
fast.beta = 0,
fast.k = 0,
varmod.method = "lm" ,
linpreds = linPreds
#
#
)
REQUIRE_NAMESPACE_QUIET_STOP <<- ""
SSCount <<- 0
SStateP <<- 0
tic("Start Time")
set.seed(123)
seeds <- vector(mode = "list", length = 41)
for(i in 1:41) seeds[[i]] <- sample.int(1000, 41)
tC <- trainControl(method="repeatedcv",number=10,  repeats=2,  savePredictions=TRUE, p=.80, returnData=TRUE, seeds = seeds )
marsGrid <- expand.grid(  .nprune =   8:12 ,
.degree =  1 ,
.minspan =  c(5,8,10,12) ,
.endspan =  4:5
)
c1 <- makeCluster(no_cores,type="SOCK", outfile = "debug.txt")
registerDoParallel(c1)
targetVars <-  projEnv$MlsDataDF[[targetName]]
out <-    train( x = projEnv$MlsDataDF[cnames],
y = xx[],
trControl=  tC,
tuneGrid=marsGrid,
method=modelInfo ,
# method="earth",
metric="RMSE",
pmethod = projEnv$Pmethod  ,
nk = projEnv$Maxterms,
nfold = 10,
ncross = 40,
keepxy = TRUE,
Auto.linpreds = TRUE,
penalty = -1,
fast.beta = 0,
fast.k = 0,
varmod.method = "lm" ,
linpreds = linPreds
#
#
)
###############################################   Run.R #########################################
#' Author:       Wm. Bert Craytor
#' Location:     242 Clifton Rd., Pacifica, CA 94044, USA
#' Date:         07/02/2021
#' Description:  This is the main R executable that should run everything else.  You should make
#'               a copy of this for each project.  I use a name like ...Pacifica_CliftonRd_1234 for
#'               the end of the path to the project data files and project name.
#'
#'                SetUpProjectEnvironment( projEnv,
#'                                        codeFolder,
#'                                        projectParentFolder,
#'                                        projectID,
#'                                        mlsDataFile,
#'                                        mlsSheet,
#'                                        subjectCQA)
#'
#'
#'              "projEnv" is the name you give the project environment.  This is variable that stores the central
#'              project information throughout the execution.
#'              "codeFolder" is the parent folder for all of this KVEsfr code (separte from your working project folder)
#'              "projectParentFolder" is the path to the parent folder for all of your projects
#'              "projectID", is the name of the sub-folder under the projectParentFolder that contains your project (property appraisal) fieles
#'                        - it is assumed that under this folder is another folder called "Earth" that contains all of your R/earth project
#'                          and data files.  It is further assumed that your Mapping file will be in the folder under this one called "Config",
#'                          that the data input and output files will be under the folder called "Mls"
#'                          That you should have created a folder called "DB" for the SQLite database, a folder called "Log" for log files
#'                          and a folder called Out for spurious output files. The log file can be useful for seeing how long the various steps
#'                          take, in particular the call to R/earth.
#'              "mlsDataFile", is the name of the MLS data file, without the .xlsx extension.
#'              "mlsSheet", is the name of the data sheet in the data file, where the MLS data is stored
#'              "subjectCQA", is the CQA value you want to assign to the  subject property.
#'
#'               So, below replace "CITY", "ROAD" and "NUMBER" with the appropriate data:
#'
#'               SetUp_0(projEnv,"C:/RPackages/KVEsfr/","C:/Users/XXXXXXX/Documents/YYYY/PVN2021/","CITY_ROAD_NUMBER","CITY_ROAD_NUMBER","MLSData", 1.1)
#'
#' Notes:        1.  This program is free software; you can redistribute it and/or modify
#'                   it under the terms of the GNU General Public License as published by
#'                   the Free Software Foundation; either version 3 of the License, or
#'                   (at your option) any later version.
#'
#'               2.  This program is distributed in the hope that it will be useful,
#'                   but WITHOUT ANY WARRANTY; without even the implied warranty of
#'                   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#'                   GNU General Public License for more details.
#'
#'               3.   A copy of the GNU General Public License is available at
#'                   http://www.r-project.org/Licenses
#'
#'####################################################################################################
library(stats)
library(foreach)
#library(magrittr)
library(Matrix)
library(openxlsx)
library(ggplotAssist)
library(writexl)
library(splines)
library(Formula)
library(plotrix)
library(rpart)
library(TeachingDemos)
library(gam)
library(gbm)
library(glmnet)
library(ParamHelpers)
library(mlr3)
library(neuralnet)
library(glmnetUtils)
library(mgcv)
library(mda)
library(partykit)
library(MASS)
library(stringi)
library(base64enc)
library(backports)
library(Hmisc)
library(R.utils)
library(collections)
library(Rcpp)
library(utils)
library(R.oo)
library(inline)
library(RSQLite)
library(devtools)
library(roxygen2)
library(here)
library(rgl)
library(scatterplot3d)
library(ggThemeAssist)
library(futile.logger)
library(rstudioapi)
library(simEd)
library(methods)
library(doParallel)
library(ipred)
library(e1071)
library(futile.logger)
library(tictoc)
library(recipes)
############################################ MOST IMPORTANT PACKAGES ####################
############################################                         ####################
library(tidymodels)  #ggplot2,dplyr,tidr,readr,purrr,tibble;j hms,stringr,lubridate,forcats,DBI,haven,httr,
#jsonlite,readxl,rvest,xml2,modelr, broom
library(caret)
library(earth)
###########################################
###########################################
projEnv <- new.env()
#traceback()
#browser()
codeFolder <- "C:/Order_1/RPackages/Mkt01/";
rFolder <- paste(codeFolder,"R/",sep="")
# Source the relevant files
sourceDirectory(rFolder)
flog.info( "Stage I",name="F1")
Stage_1(projEnv)
flog.info("Create Estimate and Residual", name = "L1")
projEnv$MlsDataDF
flog.info("Create Estimate and Residual", name = "L1")
devtools::load_all(".")
###############################################   Run.R #########################################
#' Author:       Wm. Bert Craytor
#' Location:     242 Clifton Rd., Pacifica, CA 94044, USA
#' Date:         07/02/2021
#' Description:  This is the main R executable that should run everything else.  You should make
#'               a copy of this for each project.  I use a name like ...Pacifica_CliftonRd_1234 for
#'               the end of the path to the project data files and project name.
#'
#'                SetUpProjectEnvironment( projEnv,
#'                                        codeFolder,
#'                                        projectParentFolder,
#'                                        projectID,
#'                                        mlsDataFile,
#'                                        mlsSheet,
#'                                        subjectCQA)
#'
#'
#'              "projEnv" is the name you give the project environment.  This is variable that stores the central
#'              project information throughout the execution.
#'              "codeFolder" is the parent folder for all of this KVEsfr code (separte from your working project folder)
#'              "projectParentFolder" is the path to the parent folder for all of your projects
#'              "projectID", is the name of the sub-folder under the projectParentFolder that contains your project (property appraisal) fieles
#'                        - it is assumed that under this folder is another folder called "Earth" that contains all of your R/earth project
#'                          and data files.  It is further assumed that your Mapping file will be in the folder under this one called "Config",
#'                          that the data input and output files will be under the folder called "Mls"
#'                          That you should have created a folder called "DB" for the SQLite database, a folder called "Log" for log files
#'                          and a folder called Out for spurious output files. The log file can be useful for seeing how long the various steps
#'                          take, in particular the call to R/earth.
#'              "mlsDataFile", is the name of the MLS data file, without the .xlsx extension.
#'              "mlsSheet", is the name of the data sheet in the data file, where the MLS data is stored
#'              "subjectCQA", is the CQA value you want to assign to the  subject property.
#'
#'               So, below replace "CITY", "ROAD" and "NUMBER" with the appropriate data:
#'
#'               SetUp_0(projEnv,"C:/RPackages/KVEsfr/","C:/Users/XXXXXXX/Documents/YYYY/PVN2021/","CITY_ROAD_NUMBER","CITY_ROAD_NUMBER","MLSData", 1.1)
#'
#' Notes:        1.  This program is free software; you can redistribute it and/or modify
#'                   it under the terms of the GNU General Public License as published by
#'                   the Free Software Foundation; either version 3 of the License, or
#'                   (at your option) any later version.
#'
#'               2.  This program is distributed in the hope that it will be useful,
#'                   but WITHOUT ANY WARRANTY; without even the implied warranty of
#'                   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#'                   GNU General Public License for more details.
#'
#'               3.   A copy of the GNU General Public License is available at
#'                   http://www.r-project.org/Licenses
#'
#'####################################################################################################
library(stats)
library(foreach)
#library(magrittr)
library(Matrix)
library(openxlsx)
library(ggplotAssist)
library(writexl)
library(splines)
library(Formula)
library(plotrix)
library(rpart)
library(TeachingDemos)
library(gam)
library(gbm)
library(glmnet)
library(ParamHelpers)
library(mlr3)
library(neuralnet)
library(glmnetUtils)
library(mgcv)
library(mda)
library(partykit)
library(MASS)
library(stringi)
library(base64enc)
library(backports)
library(Hmisc)
library(R.utils)
library(collections)
library(Rcpp)
library(utils)
library(R.oo)
library(inline)
library(RSQLite)
library(devtools)
library(roxygen2)
library(here)
library(rgl)
library(scatterplot3d)
library(ggThemeAssist)
library(futile.logger)
library(rstudioapi)
library(simEd)
library(methods)
library(doParallel)
library(ipred)
library(e1071)
library(futile.logger)
library(tictoc)
library(recipes)
############################################ MOST IMPORTANT PACKAGES ####################
############################################                         ####################
library(tidymodels)  #ggplot2,dplyr,tidr,readr,purrr,tibble;j hms,stringr,lubridate,forcats,DBI,haven,httr,
#jsonlite,readxl,rvest,xml2,modelr, broom
library(caret)
library(earth)
###########################################
###########################################
projEnv <- new.env()
#traceback()
#browser()
codeFolder <- "C:/Order_1/RPackages/Mkt01/";
rFolder <- paste(codeFolder,"R/",sep="")
# Source the relevant files
sourceDirectory(rFolder)
rFolder
sourceDirectory(rFolder)
codeFolder <- "C:/Order_1/RPackages/Mkt01/";
rFolder <- paste(codeFolder,"R/",sep="")
rFolder
sourceDirectory(rFolder)
sourceDirectory(rFolder)
sourceDirectory(rFolder)
sourceDirectory(rFolder)
SetUp_0(projEnv,
"C:/Order_1/RPackages/Mkt01/",
"C:/Order_1/Market/",
"M01",
"Appraisal_2",
"MLSData",
"SalePrice",
40,
"backward",
80,
6,
3,
3,
2,
5.0)
library(futile.logger)
SetUp_0(projEnv,
"C:/Order_1/RPackages/Mkt01/",
"C:/Order_1/Market/",
"M01",
"Appraisal_2",
"MLSData",
"SalePrice",
40,
"backward",
80,
6,
3,
3,
2,
5.0)
library(stringr)
SetUp_0(projEnv,
"C:/Order_1/RPackages/Mkt01/",
"C:/Order_1/Market/",
"M01",
"Appraisal_2",
"MLSData",
"SalePrice",
40,
"backward",
80,
6,
3,
3,
2,
5.0)
projEnv
+
codeFolder <- "C:/Order_1/RPackages/Mkt01/"
codeFolder <- "C:/Order_1/RPackages/Mkt01/"
projectParentFolder<-"C:/Order_1/Market/"
projectID<-"M01"
mlsData <-"Appraisal_2"
mlsSheet<-"MLSData"
targetVariable <- "SalePrice"
bootstrap <- 40
pmethod<-"backward"
maxterms<-80
nprune <- 6
minspan<-3
endspan<-3
degree<-2
subjectCQA <- 5.0
flog.appender(appender.console(), name="SC")
flog.appender(appender.file("C:/Order_1/Market/_SetUp.log"),name="S1")
projectParentFolder <-  projectParentFolder
projectID <- projectID
mlsData <- mlsData
mlsSheet <- mlsSheet
# flog.info( "SetUpProjectEnvironment",name="F1")
SetUpProjectEnvironment(projEnv, codeFolder, projectParentFolder, projectID, mlsData, mlsSheet, targetVariable,bootstrap, pmethod,maxterms,nprune,minspan,endspan,degree,subjectCQA)
projectParentFolder
projectID
mlsData
mlsSheet
targetVariable
bootstrap
pmethod
maxterms
nprune
minspan
endspan
degree
subjectCQA
projEnv
codeFolder
SetUpProjectEnvironment(projEnv, codeFolder, projectParentFolder, projectID, mlsData, mlsSheet, targetVariable,bootstrap, pmethod,maxterms,nprune,minspan,endspan,degree,subjectCQA)
object
projEnv$CqaToResidual
projEnv$CqaToResidual <- object
library(Rcpp)
sourceCpp(cppFilePath)
object
cppFilePath
sourceCpp(cppFilePath)
SetUp_0(projEnv,
"C:/Order_1/RPackages/Mkt01/",
"C:/Order_1/Market/",
"M01",
"Appraisal_2",
"MLSData",
"SalePrice",
40,
"backward",
80,
6,
3,
3,
2,
5.0)
